@page
@model GrKouk.WebRazor.Pages.MediaMng.IndexModel

@{
    ViewData["Title"] = "WarehouseItems List";
}
@section MyCss
    {

    <link rel="stylesheet" href="~/css/search-modal.css" />
    <link rel="stylesheet" href="~/css/custom-checkbox.css" />
    <link rel="stylesheet" href="~/css/searchbar.css" />
}
<h4>Media Index </h4>
<div class="container ">
    <ul class="nav small justify-content-end ">
        <li class="nav-item">
            <a href="#" role="button" class="nav-link" id="CreateNew">Create New</a>
        </li>

        <li class="nav-item">
            <a class="nav-link" data-toggle="collapse" href="#filterCollapse" role="button" id="filtersToggle"
               aria-expanded="false" aria-controls="filterCollapse">
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="collapse" href="#" id="rowSelectorsToggle" role="button">

            </a>
        </li>
        <li class="nav-item dropdown " id="SelectedRowsActionsMenu">
            <a class="nav-link dropdown-toggle disabled" role="button" id="ddSelectedRowsActions" data-toggle="dropdown"
               aria-haspopup="true" aria-expanded="false">Actions</a>
            <div class="dropdown-menu small">

                <a class="dropdown-item" href="#">Another action</a>
                <a class="dropdown-item" href="#">Something else here</a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#">Separated link</a>

            </div>
        </li>
    </ul>
</div>
<div class="collapse show" id="filterCollapse">
    <form class="form-inline" id="FiltersForm" method="get">
        <input type="hidden" id="filtersVisible" />
        <input type="hidden" id="rowSelectorsVisible" />
        <input type="hidden" id="currentSort" />
        <input type="hidden" id="currentFilter" />
        <input type="hidden" id="totalPages" />
        <input type="hidden" id="totalRecords" />
        <input type="hidden" id="pageIndex" />
        <div class="container">
            <div class="form-row">
                <div class="form-group col-md-auto">
                    <div class="searchbar">
                        <input class="search_input" type="text" name="" placeholder="Search...">
                        <a href="#" class="search_icon"><i class="fas fa-search fa-xs"></i></a>
                    </div>
                </div>

                <div class="form-group col-md-auto">
                    <label class="small"> Page Size:</label>
                    <select id="PageSize" class="form-control form-control-sm small"
                            asp-items="ViewBag.PageFilterSize"></select>
                </div>
                <div class="form-group col-md-auto">
                    <small>
                        <label name="PagingInfo"> </label>

                    </small>
                </div>
            </div>
        </div>
    </form>
</div>

<br />
<table class="table table-bordered table-sm" id="myTable">
    <thead class="thead-light">
        <tr>
            <th name="selectAllRowsColumn">
                <label class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" name="checkAllRows">
                    <span class="custom-control-indicator"></span>
                </label>
            </th>

            <th class="small">
                Media File
            </th>

            <th class="small">
                Image
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <tr></tr>


    </tbody>
</table>

<div class="row">
    <div class="col-3">
        <label class="small" name="PagingInfo"> </label>
    </div>
    <div class="col-9">
        <nav aria-label="Page navigation example">
            <ul class="pagination pagination-sm justify-content-end">
                <li class="page-item ">
                    <a href="#" id="GoToFirst"
                       class="page-link" aria-label="First">
                        First
                    </a>
                </li>
                <li class="page-item ">
                    <a href="#" id="GoToPrevious"
                       class="page-link" aria-label="Previous">
                        Previous
                    </a>
                </li>

                <li class="page-item ">
                    <a href="#" id="GoToNext"
                       class="page-link" aria-label="Next">
                        Next
                    </a>
                </li>
                <li class="page-item  ">
                    <a href="#" id="GoToLast"
                       class="page-link" aria-label="Last">
                        Last
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>



<!-- Modal Image Viewer -->
<div class="modal fade" id="imageViewer" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Image</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <img id="imageControl" src="" style="height:400px;width:400px;" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>

<!-- Modal product selector -->
<div class="modal fade" id="productSelector" tabindex="-1" role="dialog" aria-labelledby="productModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" style="overflow-y: scroll; max-height:85%;  margin-top: 50px; margin-bottom:50px;" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div class="container-fluid">
                    <div class="form-row">
                        <div class="col-6">
                            <p class="modal-title font-weight-bold" id="productModalLabel">Products</p>
                        </div>
                        <div class="col-6 text-right">

                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-10">
                            @*<form class="form-inline">
                            *@
                            <input class="form-control form-control-sm" name="productSearchText" placeholder="Search text" type="text" />
                            @*
                                </form>*@
                        </div>

                    </div>
                </div>
            </div>
            <div class="modal-body ">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12">
                            <table class="table table-bordered table-sm" id="productsList">
                                <thead class="thead-light">
                                    <tr>
                                        <th class="small">
                                            Product
                                        </th>
                                        <th class="small">
                                            col 2
                                        </th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade modal-topmost" id="loadMe" tabindex="-1" role="dialog" aria-labelledby="loadMeLabel">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-body text-center">
                <div class="loader"></div>
                <div>
                    <p>Executing request. <br><br><small>Please wait...</small></p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function() {

            var currentCulture = '@System.Globalization.CultureInfo.CurrentCulture';
            // currentCulture = 'el-GR';
            var formatterCurrency = new Intl.NumberFormat(currentCulture,
                {
                    style: 'currency',
                    currency: 'EUR',
                    minimumFractionDigits: 2
                });
            var formatterNumber = new Intl.NumberFormat(currentCulture,
                {
                    maximumFractionDigits: 3

                });
            //#region variables
            var $filtersVisible = $('#filtersVisible');
            var $filterCollapse = $('#filterCollapse');
            var $checkAllRows = $('input[name=checkAllRows]');
            var $filtersToggle = $('#filtersToggle');
            var $rowSelectorsToggle = $('#rowSelectorsToggle');
            var $rowSelectorsVisible = $('#rowSelectorsVisible');
            var $selectAllSelector = $('th[name=selectAllRowsColumn]');
            var $selectedRowsActionsMenu = $('#SelectedRowsActionsMenu');
            var $selectedRowsActionsLink = $('#ddSelectedRowsActions');
            var $deleteSelectedRowsLink = $('#deleteSelectedRows');
            var $pageIndex = $('#pageIndex');
            var $pageSize = $('#PageSize');
            var $totalPages = $('#totalPages');
            var $totalRecords = $('#totalRecords');
            //#endregion
            var reallyIsNaN = function(x) {
                return x !== x;
            };
            var handleSortUi = () => {
                var curSort = $('#currentSort').val();
                $('[name=SortIcon]').hide();
                if (curSort === undefined || curSort === null || curSort.length === 0) {
                    //hide all icons
                    return;
                }
                var curSortAr = curSort.split(':');
                switch (curSortAr[0]) {
                case 'categorysort':
                    if (curSortAr[1] === 'asc') {
                        $('#CategorySortHeaderIcon').addClass('fas fa-sort-numeric-up').show();
                    } else {
                        $('#CategorySortHeaderIcon').addClass('fas fa-sort-numeric-down').show();
                    }
                    break;
                case 'namesort':
                    if (curSortAr[1] === 'asc') {
                        $('#NameSortHeaderIcon').addClass('fas fa-sort-alpha-up').show();
                    } else {
                        $('#NameSortHeaderIcon').addClass('fas fa-sort-alpha-down').show();
                    }
                    break;
                default:
                }
            };
            var handleSelectedRowsUi = () => {
                var $rowSelectors = $('input[name=checkTableRow]');
                var $selectedRowsActionsLink = $('#ddSelectedRowsActions');
                var allRows = $rowSelectors.length;
                var selectedRowsCount = $rowSelectors.filter(':checked').length;
                if (selectedRowsCount > 0) {
                    $selectedRowsActionsLink.removeClass('disabled');
                    //$selectedRowsActionsLink.prop('disabled', 'false');
                } else {
                    $selectedRowsActionsLink.addClass('disabled');
                }
                if (selectedRowsCount == allRows) {
                    $checkAllRows.prop('checked', true);
                } else {
                    $checkAllRows.prop('checked', false);
                }
            };

            var getTableData =
                (pageIndex, pageSize, sortData, dateRange, companyFilter, cashRegCategoryFilter, clientProfileFilter,
                    searchFilter) => {
                        //#region getTableData
                        var timeout;
                        var uri = '/api/GrKoukInfoApi/GetIndexTblDataMediaEntryItems';
                        uri += `?pageIndex=${pageIndex}`;
                        uri += `&pageSize=${pageSize}`;
                        //uri += `&companyFilter=${companyFilter}`;
                        //uri += `&dateRange=${dateRange}`;
                        // uri += `&cashRegCategoryFilter=${cashRegCategoryFilter}`;
                        // uri += `&clientProfileFilter=${clientProfileFilter}`;
                        // uri += `&sortData=${sortData}`;
                        uri += `&searchFilter=${searchFilter}`;
                        $.ajax({
                            contentType: 'application/json; charset=utf-8',

                            dataType: 'json',
                            type: 'GET',

                            url: uri,
                            beforeSend: function() {
                                if (timeout) {
                                    clearTimeout(timeout);
                                }
                                timeout = setTimeout(function() {

                                        $("#loadMe").modal({
                                            backdrop: "static", //remove ability to close modal with click
                                            keyboard: false, //remove option to close with keyboard
                                            show: true //Display loader!
                                        });
                                    },
                                    1000);

                            },
                            success: function(result) {
                                var totalRecords = result.totalRecords;
                                var totalPages = result.totalPages;

                                $totalPages.val(totalPages);
                                $totalRecords.val(totalRecords);
                                var pagingInfo =
                                    ` Page:${pageIndex} of ${totalPages} Total Items ${totalRecords}`;
                                $('[name=PagingInfo]').text(pagingInfo);
                                var hasPrevious = result.hasPrevious;
                                var hasNext = result.hasNext;
                                if (hasPrevious) {
                                    $('#GoToFirst, #GoToPrevious').parent().removeClass('disabled');
                                } else {
                                    $('#GoToFirst, #GoToPrevious').parent().addClass('disabled');
                                }
                                if (hasNext) {
                                    $('#GoToLast, #GoToNext').parent().removeClass('disabled');
                                } else {
                                    $('#GoToLast, #GoToNext').parent().addClass('disabled');
                                }
                                $('#myTable > tbody').empty();

                                $.each(result.data,
                                    function(index, value) {
                                        let cols = [
                                            {
                                                text: value.mediaFile,
                                                class: 'small'
                                            }
                                        ];
                                        var itemId = value.id;
                                        //#region actionColumns
                                        var urlEdit = `@Url.Page("./Edit")?id=${itemId}`;
                                        var urlInfo = `@Url.Page("./Details")?id=${itemId}`;
                                        var urlDel = `@Url.Page("./Delete")?id=${itemId}`;
                                        var urlNewLikeThis = `@Url.Page("./Create")?copyFromId=${itemId}`;
                                        var urlKartela = `@Url.Page("./Kartela")?warehouseItemId=${itemId}`;
                                        var actionsCol = '<td class="small text-center d-none d-md-table-cell">';

                                        actionsCol += `<a href="#" data-mediaid="${itemId}" role="button" data-toggle="modal" data-target="#productSelector"><i class="fas fa-info-circle fa-lg" style="color:slategray"></i></a> | `;
                                        // actionsCol += `<a href="${urlInfo}"><i class="fas fa-info-circle fa-lg" style="color:slategray"></i></a> | `;
                                        actionsCol += `<a href="${urlDel}"><i class="fas fa-trash fa-lg" style="color:slategray"></i></a>  `;


                                        actionsCol += '</td>';
                                        var actionColMobile =
                                            '<td class="small text-center d-table-cell d-sm-table-cell d-md-none">';
                                        actionColMobile +=
                                            '<a class=" dropdown-toggle" role="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" ';
                                        actionColMobile +=
                                            'aria-expanded="false"><i class="fas fa-bars fa-lg" style="color:slategray"></i></a>';
                                        actionColMobile +=
                                            '<div class="dropdown-menu small" aria-labelledby="dropdownMenuButton">';
                                        actionColMobile += `<a class="dropdown-item" href="#" data-mediaid="${itemId}" role="button" data-toggle="modal" data-target="#productSelector">`;
                                        actionColMobile += '<i class="fas fa-info-circle fa-lg" style="color:slategray"></i>Details</a>';
                                        actionColMobile += `<a class="dropdown-item" href="${urlDel}">`;
                                        actionColMobile +='<i class="fas fa-trash fa-lg" style = "color:slategray" ></i> Delete</a>';
                                       // actionColMobile += `<a class="dropdown-item" href="${urlKartela}">`;
                                       // actionColMobile +='<i class="fas fa-receipt fa-lg" style = "color:slategray" ></i> Καρτέλα</a>';
                                       // actionColMobile += `<a class="dropdown-item" href="${urlNewLikeThis}">`;
                                       // actionColMobile +='<i class="fas fa-clone fa-lg" style="color:slategray"></i> Duplicate</a>';
                                        actionColMobile += '</div></td>';
                                        //#endregion
                                        var $tr = $('<tr>');

                                        var $td = $(
                                            '<td name="selectRowColumn"> <label class="custom-control custom-checkbox">  ' +
                                            ' <input type="checkbox" class="custom-control-input" name="checkTableRow" ' +
                                            `data-itemId="${itemId}">` +
                                            '<span class="custom-control-indicator"></span></label></td>');
                                        $tr.append($td);
                                        cols.forEach(function(item) {
                                            var $tdCol = $('<td>').text(item.text).addClass(item.class);
                                            $tr.append($tdCol);

                                        });
                                        var imageCol = '<td>';
                                        imageCol +=
                                            '<a href="#" role="button" data-toggle="modal" data-target="#imageViewer" ';
                                        imageCol += `data-imageurl="${value.url}">`;
                                        imageCol += `<img src="${value.url}" style="height:50px;width:50px;" />`;
                                        imageCol += '</a>';
                                        imageCol += '</td>';
                                        $tr.append(imageCol);
                                        $tr.append(actionsCol);
                                        $tr.append(actionColMobile);
                                        $tr.appendTo('#myTable > tbody');
                                    });
                                $('input[name=checkTableRow]').on('change',
                                    function() {
                                        handleSelectedRowsUi();
                                    });
                                //console.log();
                                rowSelectorsUi();
                                handleSortUi();
                            },
                            complete: function() {
                                if (timeout) {
                                    clearTimeout(timeout);
                                }
                                $("#loadMe").modal("hide");
                                setTimeout(function() {
                                        console.log('Checking for open modals');
                                        var isOpen = $('#loadMe').hasClass('show');
                                        if (isOpen) {
                                            console.log('There is an open Modal');
                                            $("#loadMe").modal("hide");
                                        } else {
                                            console.log('No open modal');
                                        }
                                    },
                                    2000);
                            },
                            error: function(e) {
                                console.log(e);

                            }
                        });
                        //#endregion
                    };

            var rowSelectorsUi = () => {
                var $selectSingleSelectors = $('td[name=selectRowColumn]');
                var selectorsVisible = $rowSelectorsVisible.val();
                var newSelectorsVisible =
                    (selectorsVisible == 'True' || selectorsVisible == 'true' || selectorsVisible === true)
                        ? 'True'
                        : 'False';
                if (newSelectorsVisible == 'True') {
                    $selectAllSelector.removeAttr('hidden');
                    $selectSingleSelectors.removeAttr('hidden');
                    $selectAllSelector.show();
                    $selectSingleSelectors.show();
                    $rowSelectorsVisible.val(true);
                    $rowSelectorsToggle.text('Hide Row Selectors');
                    $selectedRowsActionsMenu.removeAttr('hidden');
                    $selectedRowsActionsLink.addClass('disabled');
                } else {
                    $selectAllSelector.hide();
                    $selectSingleSelectors.hide();
                    $rowSelectorsVisible.val(false);
                    $rowSelectorsToggle.text('Show Row Selectors');
                    $selectedRowsActionsMenu.attr('hidden', 'true');
                }
            };
            var refreshTableData = () => {
                var pageIndexVal = parseInt($('#pageIndex').val());

                var pageIndex = reallyIsNaN(pageIndexVal)
                    ? 1
                    : pageIndexVal;
                $('#pageIndex').val(pageIndex);

                var pageSize = $('#PageSize').val() == null || $('#PageSize').val().length == 0
                    ? 10
                    : parseInt($('#PageSize').val());


                //var companyFilter = $('#CompanyFilter').val();
                //var cashRegCategoryFilter = $('#CashRegCategoryFilter').val();
                var sortData = $('#currentSort').val();
                var searchVal = $('.search_input').val();
                //var transactorTypeFilter = $('#TransactorTypeFilter').val();
                var clientProfileFilter = $('#ClientProfileFilter').val();
                getTableData(pageIndex, pageSize, sortData, '', '', '', '', searchVal);

            };
            var gotoFirstPage = () => {
                var curPageIndex = 1;
                $pageIndex.val(curPageIndex);
                refreshTableData();
            };
            var gotoLastPage = () => {
                var curPageIndex = parseInt($totalPages.val());

                $pageIndex.val(curPageIndex);
                refreshTableData();
            };
            var gotoNextPage = () => {
                var curPageIndex = parseInt($pageIndex.val());
                curPageIndex += 1;
                $pageIndex.val(curPageIndex);
                refreshTableData();

            };
            var gotoPreviousPage = () => {
                var curPageIndex = parseInt($pageIndex.val());
                curPageIndex -= 1;
                $pageIndex.val(curPageIndex);
                refreshTableData();

            };
            var deleteSelectedRows = () => {
                var $rowSelectors = $('input[name=checkTableRow]');
                var selectedRows = $rowSelectors.filter(':checked');
                var idsToDelete = [];
                $.each(selectedRows,
                    function(key, value) {
                        console.log(value);
                        var id = parseInt(value.dataset.itemid);
                        idsToDelete.push(id);
                    });
                if (idsToDelete.length > 0) {
                    var idsJs = JSON.stringify({
                        //ToDo: Change this
                        section: 'SectionCode',
                        ids: idsToDelete
                    });
                    var timeout;

                    $.ajax({
                        contentType: 'application/json; charset=utf-8',

                        dataType: 'json',
                        type: 'POST',
                        data: idsJs,
                        url: "/api/GrkoukInfoApi/DellDocumet",
                        beforeSend: function() {
                            if (timeout) {
                                clearTimeout(timeout);
                            }
                            timeout = setTimeout(function() {

                                    $("#loadMe").modal({
                                        backdrop: "static", //remove ability to close modal with click
                                        keyboard: false, //remove option to close with keyboard
                                        show: true //Display loader!
                                    });
                                },
                                1000);

                        },
                        success: function(result) {
                            console.log(result);
                            toastr.success("Delete", result.message);
                            refreshTableData();

                        },
                        complete: function() {
                            if (timeout) {
                                clearTimeout(timeout);
                            }
                            $("#loadMe").modal("hide");
                            setTimeout(function() {
                                    console.log('Checking for open modals');
                                    var isOpen = $('#loadMe').hasClass('show');
                                    if (isOpen) {
                                        console.log('There is an open Modal');
                                        $("#loadMe").modal("hide");
                                    } else {
                                        console.log('No open modal');
                                    }
                                },
                                2000);
                        },
                        error: function(e) {
                            console.log(e);
                            toastr.error("Error", e.responseJSON.error);

                        }
                    });

                }

            };
            var getSelectedRows = () => {
                var $rowSelectors = $('input[name=checkTableRow]');
                var selectedRows = $rowSelectors.filter(':checked');
                console.log('Selected table rows=' + selectedRows);
            };
            var countSelectedRows = () => {
                var $rowSelectors = $('input[name=checkTableRow]');
                var selectedRows = $rowSelectors.filter(':checked');
                return selectedRows.length;
            };
            var handleFiltersUi = () => {
                var filterVisible = $filtersVisible.val();
                if (filterVisible === 'True' || filterVisible === 'true') {
                    $filterCollapse.collapse('show');
                } else {
                    $filterCollapse.collapse('hide');
                }
            };
            var showFiltersUi = () => {

            };
            $deleteSelectedRowsLink.on('click',
                () => {
                    deleteSelectedRows();
                });

            $filterCollapse.on('hidden.bs.collapse',
                function() {
                    console.log('Filters Hidden');
                    $filtersToggle.text('Show Filters');


                    $filtersVisible.val(false);
                });

            $filterCollapse.on('shown.bs.collapse',
                function() {
                    console.log('Filters Shown');
                    $filtersToggle.text('Hide Filters');
                    // var alist = $('a[href*="&filtersVisible"]');

                    $filtersVisible.val(true);
                });
            $checkAllRows.on('change',
                function() {
                    var th = $(this).index();
                    var isChecked = $(this).prop('checked');
                    $('input[name=checkTableRow]').prop('checked', isChecked);
                    var selectedRowsCount = countSelectedRows();
                    if (selectedRowsCount > 0) {
                        $selectedRowsActionsLink.removeClass('disabled');
                    } else {
                        $selectedRowsActionsLink.addClass('disabled');
                    }
                });


            var rosSelectorsToggleHandler = () => {
                var $selectSingleSelectors = $('td[name=selectRowColumn]');
                var selectorsVisible = $rowSelectorsVisible.val();
                var newSelectorsVisible =
                    (selectorsVisible == 'True' || selectorsVisible == 'true' || selectorsVisible === true)
                        ? 'False'
                        : 'True';
                if (newSelectorsVisible == 'True') {
                    $selectAllSelector.removeAttr('hidden');
                    $selectSingleSelectors.removeAttr('hidden');
                    $selectAllSelector.show();
                    $selectSingleSelectors.show();
                    $rowSelectorsVisible.val(true);
                    $rowSelectorsToggle.text('Hide Row Selectors');
                    $selectedRowsActionsMenu.removeAttr('hidden');
                    $selectedRowsActionsLink.addClass('disabled');
                } else {
                    $selectAllSelector.hide();
                    $selectSingleSelectors.hide();
                    $rowSelectorsVisible.val(false);
                    $rowSelectorsToggle.text('Show Row Selectors');
                    $selectedRowsActionsMenu.attr('hidden', 'true');
                }
            };
            //---------------------
            var assignManyMediaToProduct = (productId) => {
                var $rowSelectors = $('input[name=checkTableRow]');
                var selectedRows = $rowSelectors.filter(':checked');
                var idsToDelete = [];
                $.each(selectedRows,
                    function(key, value) {
                        console.log(value);
                        var id = parseInt(value.dataset.itemid);
                        idsToDelete.push(id);
                    });
                if (idsToDelete.length > 0) {
                    var idsJs = JSON.stringify({
                        //ToDo: Change this
                        productId: productId,
                        mediaIds: idsToDelete
                    });
                    var timeout;

                    $.ajax({
                        contentType: 'application/json; charset=utf-8',

                        dataType: 'json',
                        type: 'POST',
                        data: idsJs,
                        url: "/api/GrkoukInfoApi/AssignMediaToProduct",
                        beforeSend: function() {
                            if (timeout) {
                                clearTimeout(timeout);
                            }
                            timeout = setTimeout(function() {

                                    $("#loadMe").modal({
                                        backdrop: "static", //remove ability to close modal with click
                                        keyboard: false, //remove option to close with keyboard
                                        show: true //Display loader!
                                    });
                                },
                                1000);

                        },
                        success: function(result) {
                            console.log(result);
                            toastr.success("Assign Media", result.message);
                            refreshTableData();

                        },
                        complete: function() {
                            if (timeout) {
                                clearTimeout(timeout);
                            }
                            $("#loadMe").modal("hide");
                            setTimeout(function() {
                                    console.log('Checking for open modals');
                                    var isOpen = $('#loadMe').hasClass('show');
                                    if (isOpen) {
                                        console.log('There is an open Modal');
                                        $("#loadMe").modal("hide");
                                    } else {
                                        console.log('No open modal');
                                    }
                                },
                                2000);
                        },
                        error: function(e) {
                            console.log(e);
                            toastr.error("Assign Media", e.responseJSON.error);

                        }
                    });

                }

            };
            var assignMediaToProduct = (mediaId, productId) => {

                var idsToDelete = [];
                var id = parseInt(mediaId);
                idsToDelete.push(id);

                if (idsToDelete.length > 0) {
                    var idsJs = JSON.stringify({
                        //ToDo: Change this
                        productId: productId,
                        mediaIds: idsToDelete
                    });
                    var timeout;

                    $.ajax({
                        contentType: 'application/json; charset=utf-8',

                        dataType: 'json',
                        type: 'POST',
                        data: idsJs,
                        url: "/api/GrkoukInfoApi/AssignMediaToProduct",
                        beforeSend: function() {
                            if (timeout) {
                                clearTimeout(timeout);
                            }
                            timeout = setTimeout(function() {

                                    $("#loadMe").modal({
                                        backdrop: "static", //remove ability to close modal with click
                                        keyboard: false, //remove option to close with keyboard
                                        show: true //Display loader!
                                    });
                                },
                                1000);

                        },
                        success: function(result) {
                            console.log(result);
                            toastr.success("Assign Media", result.message);
                            //refreshTableData();

                        },
                        complete: function() {
                            if (timeout) {
                                clearTimeout(timeout);
                            }
                            $("#loadMe").modal("hide");
                            setTimeout(function() {
                                    console.log('Checking for open modals');
                                    var isOpen = $('#loadMe').hasClass('show');
                                    if (isOpen) {
                                        console.log('There is an open Modal');
                                        $("#loadMe").modal("hide");
                                    } else {
                                        console.log('No open modal');
                                    }
                                },
                                2000);
                        },
                        error: function(e) {
                            console.log(e);
                            toastr.error("Assign Media error", e.responseJSON.error);

                        }
                    });

                }

            };

            var getProductsSelectorList = (mediaIds,searchFilter, pageSize) =>{
                console.log("Inside getProductsSelectorList");
                console.log("searchFilter is " + searchFilter);

                var timeout;
                var pageIndex = 1;
                var uri = '/api/GrKoukInfoApi/GetIndexTblDataWarehouseItems';
                uri += `?pageIndex=${pageIndex}`;
                uri += `&pageSize=${pageSize}`;

                uri += `&searchFilter=${searchFilter}`;
                $.ajax({
                    contentType: 'application/json; charset=utf-8',

                    dataType: 'json',
                    type: 'GET',

                    url: uri,
                    beforeSend: function() {
                        if (timeout) {
                            clearTimeout(timeout);
                        }
                        timeout = setTimeout(function() {
                                $("#loadMe").modal({
                                    backdrop: "static",
                                    keyboard: false,
                                    show: true
                                });
                            },
                            1000);
                    },
                    success: function(result) {
                        $('#productsList > tbody').empty();
                        $('#productsList > thead').empty();
                        let colDefs = [
                            {
                                header: 'Code',
                                text: '',
                                class: 'small'
                            },
                            {
                                header: 'Product',
                                text: '',
                                class: 'small'
                            },
                            {
                                header: 'Category',
                                text: '',
                                class: 'small'
                            },
                            {
                                header: 'Nature',
                                text: '',
                                class: 'small'
                            },
                            {
                                header: 'Company',
                                text: '',
                                class: 'small'
                            }
                        ];
                        var $trHead = $('<tr>');
                        colDefs.forEach(function(item) {
                            var $tdColHead = $('<th>').text(item.header).addClass(item.class);
                            $trHead.append($tdColHead);
                        });
                        $trHead.append($('<th>'));
                        $trHead.appendTo('#productsList > thead');
                        $.each(result.data,
                            function(index, value) {
                                colDefs[0].text = value.code;
                                colDefs[1].text = value.name;
                                colDefs[2].text = value.materialCateroryName;
                                colDefs[3].text = value.warehouseItemNatureName;
                                colDefs[4].text = value.companyCode;
                                var itemId = value.id;
                               // var urlDel = `@Url.Page("./Delete")?id=${itemId}`;

                                var $tr = $('<tr>');

                                colDefs.forEach(function(item) {
                                    var $tdCol = $('<td>').text(item.text).addClass(item.class);
                                    $tr.append($tdCol);

                                });
                                var actionsCol = '<td class="small text-center d-none d-md-table-cell">';
                                actionsCol += '<button type="button" class="btn btn-outline-info btn-sm" ';
                                actionsCol += `data-itemId="${itemId}"`;
                                actionsCol += 'name="selectItem">';
                                actionsCol +=
                                    '<span><i class="far fa-check-square fa-lg" style="color:slategray"></i></span>';
                                actionsCol += '</button>';
                                actionsCol += '</td>';

                                $tr.append(actionsCol);
                                $tr.appendTo('#productsList > tbody');

                            });
                        $('[name=selectItem]').on('click',
                            function (event) {
                                var button = $(event.delegateTarget);
                                var productId = button.data('itemid');
                                console.log('Inside click event handler for selectItem');
                                if (mediaIds instanceof Array) {
                                    if (mediaIds.length==1) {
                                        assignMediaToProduct(mediaIds[0], productId);
                                    }

                                    $('#productSelector').modal('hide');
                                    console.log("Passed array with length " + mediaIds.length);

                                } else {
                                    console.log("No media selected");

                                }
                            });
                    },
                    complete: function() {
                        if (timeout) {
                            clearTimeout(timeout);
                        }
                        $("#loadMe").modal("hide");
                        setTimeout(function() {
                                console.log('Checking for open modals');
                                var isOpen = $('#loadMe').hasClass('show');
                                if (isOpen) {
                                    console.log('There is an open Modal');
                                    $("#loadMe").modal("hide");
                                } else {
                                    console.log('No open modal');
                                }
                            },
                            2000);
                    },
                    error: function(e) {
                        console.log(e);

                    }
                });
            };
            //-------------------------
            $rowSelectorsToggle.on('click',
                function() {
                    rosSelectorsToggleHandler();
                });

            $('#CashRegCategoryFilter').on('change',
                function() {
                    $('#pageIndex').val(1);
                    refreshTableData();
                });
            $('#CompanyFilter').on('change',
                function() {
                    $('#pageIndex').val(1);
                    refreshTableData();
                });
            $('#ClientProfileFilter').on('change',
                function() {
                    $('#pageIndex').val(1);
                    refreshTableData();
                });
            $('#PageSize').on('change',
                function() {
                    $('#pageIndex').val(1);
                    refreshTableData();
                });
            $('#GoToLast').on('click',
                function() {
                    gotoLastPage();
                });
            $('#GoToFirst').on('click',
                function() {
                    gotoFirstPage();
                });
            $('#GoToNext').on('click',
                function() {
                    gotoNextPage();
                });
            $('#GoToPrevious').on('click',
                function() {
                    gotoPreviousPage();
                });
            $('#CategorySortHeader').on('click',
                function() {
                    var newSortVal = '';
                    var curSort = $('#currentSort').val();
                    if (curSort === undefined || curSort === null || curSort.length === 0) {
                        curSort = 'categorysort:desc';
                    }
                    var curSortAr = curSort.split(':');
                    if (curSortAr[0] === 'categorysort') {
                        var newSort = curSortAr[1] === 'asc' ? 'desc' : 'asc';
                        newSortVal = curSortAr[0] + ':' + newSort;
                    } else {
                        newSortVal = 'categorysort:asc';
                    }
                    $('#currentSort').val(newSortVal);
                    $('#pageIndex').val(1);
                    refreshTableData();

                });
            $('#NameSortHeader').on('click',
                function() {
                    var newSortVal = '';
                    var curSort = $('#currentSort').val();
                    if (curSort === undefined || curSort === null || curSort.length === 0) {
                        curSort = 'namesort:desc';
                    }
                    var curSortAr = curSort.split(':');
                    if (curSortAr[0] === 'namesort') {
                        var newSort = curSortAr[1] === 'asc' ? 'desc' : 'asc';
                        newSortVal = curSortAr[0] + ':' + newSort;
                    } else {
                        newSortVal = 'namesort:asc';
                    }
                    $('#currentSort').val(newSortVal);
                    $('#pageIndex').val(1);
                    refreshTableData();
                });
            $('#CreateNew').on('click',
                function() {
                    var uri = '@Url.Page("Create")';
                    window.location.href = uri;
                });
            $('.search_icon').on('click',
                function() {
                    icon = $(this).find("svg");
                    if (icon.hasClass('fa-search')) {
                        icon.addClass("fa-times").removeClass("fa-search");
                    } else {
                        icon.addClass("fa-search").removeClass("fa-times");
                        $('.search_input').val('');
                    }

                    refreshTableData();
                });

            $('#FiltersForm').on('submit',
                function(e) {
                    e.preventDefault();
                    var $icon = $('.search_icon').find("svg");
                    if ($icon.hasClass('fa-search')) {
                        $icon.addClass("fa-times").removeClass("fa-search");

                    } else {
                        $icon.addClass("fa-search").removeClass("fa-times");

                    }
                    refreshTableData();
                });
            $('#imageViewer').on('show.bs.modal',
                function(event) {
                    var button = $(event.relatedTarget);
                    var imageUrl = button.data('imageurl');
                    var $modal = $(this);
                    $modal.find('.modal-title').text('Image');
                    $modal.find('#imageControl').attr("src", imageUrl);
                });
            $('#productSelector').on('show.bs.modal',
                function (event) {
                    var button = $(event.relatedTarget);
                    var mediaId = button.data('mediaid');
                    var arr = [];
                    arr.push(mediaId);
                    getProductsSelectorList(arr,'', 10);
                });

            var timeKey;
            $('[name=productSearchText]').on('keypress',
                function(event) {
                    console.log("Inside keyUp evnet");
                    var searchText = $('[name=productSearchText]').val();
                    if (searchText.length == 0) {
                        console.log("search text lenght 0 returning");
                        return;
                    }
                    if (timeKey) {
                        console.log("Clear timeKey");
                        clearTimeout(timeKey);
                    }
                    timeKey = setTimeout(function() {
                            console.log("Will execute get request in 1 sec!");
                            getProductsSelectorList( '',searchText, 100);
                        },
                        1000);
                });
            var storageItemJs = localStorage.getItem('MediaEntryIndexView');
            if (storageItemJs === undefined || storageItemJs === null) {
                $('#pageIndex').val(1);
                $('#filtersVisible').val(true);
                $('#rowSelectorsVisible').val(true);
                // $rowSelectorsToggle.text('Hide Row Selectors');
                // $filtersToggle.text('Hide Filters');
                $('#DatePeriodFilter').val('CURMONTH');
                $('#CompanyFilter').val(0);
                $('#TransactorTypeFilter').val(1);
                $('#ClientProfileFilter').val(0);
                $('#CashRegCategoryFilter').val(0);
                $('#currentSort').val('namesort:asc');
            } else {
                var storageItem = JSON.parse(storageItemJs);
                var filtersValue = storageItem.find(x => x.filterKey === 'filtersVisible').filterValue;
                if (filtersValue === true) {
                    $filtersToggle.text('Hide Filters');
                } else {
                    $filtersToggle.text('Show Filters');
                }
                $('#filtersVisible').val(filtersValue);
                filtersValue = storageItem.find(x => x.filterKey === 'rowSelectorsVisible').filterValue;
                $('#rowSelectorsVisible').val(filtersValue);
                filtersValue = storageItem.find(x => x.filterKey === 'currentSort').filterValue;
                $('#currentSort').val(filtersValue);
                filtersValue = storageItem.find(x => x.filterKey === 'companyFilter').filterValue;
                $('#CompanyFilter').val(filtersValue);
                filtersValue = storageItem.find(x => x.filterKey === 'pageSize').filterValue;
                $('#PageSize').val(filtersValue);
                filtersValue = storageItem.find(x => x.filterKey === 'pageIndex').filterValue;
                $('#pageIndex').val(filtersValue);
                filtersValue = storageItem.find(x => x.filterKey === 'cashRegCategoryFilter').filterValue;
                $('#CashRegCategoryFilter').val(filtersValue);
                filtersValue = storageItem.find(x => x.filterKey === 'clientProfileFilter').filterValue;
                $('#ClientProfileFilter').val(filtersValue);
            }
            handleFiltersUi();
            refreshTableData();

            rowSelectorsUi();
        });

        $(window).on('beforeunload',
            function(e) {
                //#region CommentOut
                //#region Variables
                var filtersVisible = $('#filterCollapse').hasClass('show');
                var $rowSelectorsColumn = $('th[name=selectAllRowsColumn]');

                var rowSelectorsNotVisible = $rowSelectorsColumn.is(':hidden');
                var rowSelectorsVisible = (rowSelectorsNotVisible) ? false : true;

                var pageSize = $('#PageSize').val();
                // var dateRange = $('#DatePeriodFilter').val();
                var currentSort = $('#currentSort').val();
                var companyFilter = $('#CompanyFilter').val();
                var pageIndex = $('#pageIndex').val();
                var transactorTypeFilter = $('#TransactorTypeFilter').val();
                var clientProfileFilter = $('#ClientProfileFilter').val();
                var cashRegCategoryFilter = $('#CashRegCategoryFilter').val();
                var filtersArr = [];
                //#endregion
                filtersArr.push({
                    filterKey: 'filtersVisible',
                    filterValue: filtersVisible
                });
                filtersArr.push({
                    filterKey: 'rowSelectorsVisible',
                    filterValue: rowSelectorsVisible
                });
                filtersArr.push({
                    filterKey: 'pageIndex',
                    filterValue: pageIndex
                });
                filtersArr.push({
                    filterKey: 'pageSize',
                    filterValue: pageSize
                });

                filtersArr.push({
                    filterKey: 'currentSort',
                    filterValue: currentSort
                });
                filtersArr.push({
                    filterKey: 'companyFilter',
                    filterValue: companyFilter
                });
                filtersArr.push({
                    filterKey: 'transactorTypeFilter',
                    filterValue: transactorTypeFilter
                });
                filtersArr.push({
                    filterKey: 'clientProfileFilter',
                    filterValue: clientProfileFilter
                });
                filtersArr.push({
                    filterKey: 'cashRegCategoryFilter',
                    filterValue: cashRegCategoryFilter
                });
                var sessionVal = JSON.stringify(filtersArr);

                localStorage.setItem('MediaEntryIndexView', sessionVal);
                //#endregion

            });
    </script>
}