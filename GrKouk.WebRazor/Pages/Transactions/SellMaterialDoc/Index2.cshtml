@page
@using System.Collections.Specialized
@model GrKouk.WebRazor.Pages.Transactions.SellMaterialDoc.Index2Model

@{
    ViewData["Title"] = "Παραστατικά Πώλησης";
}
@section MyCss
    {
    <link rel="stylesheet" href="~/css/custom-checkbox.css" />
}
<h4>Λίστα Παραστατικών Πώλησης</h4>


<div class="container ">
    <ul class="nav small justify-content-end ">
        <li class="nav-item">
            <a href="#" role="button" class="nav-link" id="CreateNew">Create New</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="collapse" href="#filterCollapse" role="button" id="filtersToggle"
               aria-expanded="false" aria-controls="filterCollapse">
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="collapse" href="#" id="rowSelectorsToggle" role="button">

            </a>
            @*<a class="nav-link disabled" href="#" tabindex="-1" >Selectors</a>*@
        </li>
        <li class="nav-item dropdown " id="SelectedRowsActionsMenu">
            <a class="nav-link dropdown-toggle disabled" role="button" id="ddSelectedRowsActions" data-toggle="dropdown"
               aria-haspopup="true" aria-expanded="false">Actions</a>
            <div class="dropdown-menu small">
                <a class="dropdown-item" href="#" id="deleteSelectedRows">Delete Selected</a>
                <a class="dropdown-item" href="#">Another action</a>
                <a class="dropdown-item" href="#">Something else here</a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#">Separated link</a>

            </div>
        </li>
    </ul>
</div>

<div class="collapse " id="filterCollapse">
    <form class="form-inline" asp-page="./Index" method="get">
        <input type="hidden" id="filtersVisible" />
        <input type="hidden" id="rowSelectorsVisible" />
        <input type="hidden" id="currentSort" />
        <input type="hidden" id="currentFilter" />
        <input type="hidden" id="totalPages" />
        <input type="hidden" id="totalRecords" />
        <input type="hidden" id="pageIndex" />
        <div class="container">
            <div class="form-row">
                <div class="form-group col-md-auto">
                    <label class="small"> Search:</label>
                    <input class="form-control form-control-sm small" type="text" name="SearchString" />
                    <input type="submit" value="Search" class="btn btn-light btn-sm" />
                </div>
                <div class="form-group col-md-auto">
                    <a class="small" id="clearTextFilter" href="#">Back to full List</a>
                </div>
                <div class="form-group col-md-auto">
                    <label class="small"> Period:</label>
                    <select name="DatePeriodFilter" id="DatePeriodFilter" class="form-control form-control-sm small"
                            asp-items="ViewBag.DataFilterValues"></select>
                </div>
                <div class="form-group col-md-auto">
                    <label class="small">Company:</label>
                    <select id="CompanyFilter" class="form-control form-control-sm small"
                            asp-items="ViewBag.CompanyFilter"></select>

                </div>
                <div class="form-group col-md-auto">
                    <label class="small"> Page Size:</label>
                    <select id="PageSize" class="form-control form-control-sm small"
                            asp-items="ViewBag.PageFilterSize"></select>
                </div>
                <div class="form-group col-md-auto">
                    <small>
                        <label name="PagingInfo"> </label>

                    </small>
                </div>
            </div>
        </div>
    </form>
</div>
<br />
<table class="table table-bordered table-sm" id="myTable">
    <thead class="thead-light">
        <tr>
            <th name="selectAllRowsColumn">
                <label class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" name="checkAllRows">
                    <span class="custom-control-indicator"></span>
                </label>
            </th>
            <th class="small text-center">
                <a href="#" id="TransDateHeader" role="button">
                    Date
                </a>
                <i class="fas fa-sort-numeric-down" id="TransDateHeaderIcon" name="SortIcon"></i>
            </th>
            <th class="small">
                <a href="#" id="TransactorNameHeader">
                    Transactor
                </a>
                <i class="fas fa-sort-alpha-down" id="TransactorNameHeaderIcon" name="SortIcon"></i>
            </th>
            <th class="small">
                Series Code
            </th>
            <th class="small d-none d-sm-table-cell">
                Ref Code
            </th>
            <th class="small text-center">
                Total Amount
            </th>
            <th class="small d-none d-md-table-cell">
                CompanyCode
            </th>
            <th class="small"></th>
        </tr>
    </thead>
    <tbody>
       
            <tr>
                <td name="selectRowColumn">
                    <label class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" name="checkTableRow">
                        <span class="custom-control-indicator"></span>
                    </label>
                </td>
                <td class="small">
                </td>
                <td class="small">
                </td>
                <td class="small">
                </td>

                <td class="small">
                </td>
                <td class="small text-right">
                </td>
                <td class="small">
                </td>

                <td class="small">
                </td>
            </tr>
    </tbody>
</table>
<div class="row">
    <div class="col-3">
        <label class="small" name="PagingInfo"> </label>
    </div>
    <div class="col-9">
        <nav aria-label="Page navigation example">
            <ul class="pagination pagination-sm justify-content-end">
                <li class="page-item ">
                    <a href="#" id="GoToFirst"
                       class="page-link" aria-label="First">
                        @*<span aria-hidden="true">;</span>*@
                        First
                    </a>
                </li>
                <li class="page-item ">
                    <a href="#" id="GoToPrevious"
                       class="page-link" aria-label="Previous">
                        @*<span aria-hidden="true">&laquo;</span>*@
                        Previous
                    </a>
                </li>

                <li class="page-item ">
                    <a href="#" id="GoToNext"
                       class="page-link" aria-label="Next">
                        @*<span aria-hidden="true">&raquo;</span>*@
                        Next
                    </a>
                </li>
                <li class="page-item  ">
                    <a href="#" id="GoToLast"
                       class="page-link" aria-label="Last">
                        @*<span aria-hidden="true">;</span>*@
                        Last
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="loadMe" tabindex="-1" role="dialog" aria-labelledby="loadMeLabel">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-body text-center">
                <div class="loader"></div>
                <div>
                    <p>Executing request. <br><br><small>Please wait...</small></p>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script src="~/js/moment.min.js"></script>
    <script>
        $(document).ready(function () {
            //#region variables
            var $filtersVisible = $('#filtersVisible');
            var $filterCollapse = $('#filterCollapse');
            var $checkAllRows = $('input[name=checkAllRows]');
            var $filtersToggle = $('#filtersToggle');
            var $rowSelectorsToggle = $('#rowSelectorsToggle');
            var $rowSelectorsVisible = $('#rowSelectorsVisible');
            var $selectAllSelector = $('th[name=selectAllRowsColumn]');
            var $selectedRowsActionsMenu = $('#SelectedRowsActionsMenu');
            var $selectedRowsActionsLink = $('#ddSelectedRowsActions');
            var $deleteSelectedRowsLink = $('#deleteSelectedRows');
            var $pageIndex = $('#pageIndex');
            var $pageSize = $('#PageSize');
            var $totalPages = $('#totalPages');
            var $totalRecords = $('#totalRecords');
            //#endregion
            var reallyIsNaN = function(x) {
                return x !== x;
            };
            var handleSortUi = () => {
                
                var curSort = $('#currentSort').val();

                $('[name=SortIcon]').hide();
                if (curSort === undefined || curSort === null || curSort.length === 0) {
                    //hide all icons
                    return;
                   
                }
                var curSortAr = curSort.split(':');
                switch (curSortAr[0]) {
                    case 'transactiondate':
                        if (curSortAr[1] === 'asc') {
                            $('#TransDateHeaderIcon').addClass('fas fa-sort-numeric-up').show();
                        } else {
                            $('#TransDateHeaderIcon').addClass('fas fa-sort-numeric-down').show();
                        }
                        break;
                    case 'transactorname':
                        if (curSortAr[1] === 'asc') {
                            $('#TransactorNameHeaderIcon').addClass('fas fa-sort-alpha-up').show();
                        } else {
                            $('#TransactorNameHeaderIcon').addClass('fas fa-sort-alpha-down').show();
                        }
                        break;
                default:
                }
               
            };
            var handleSelectedRowsUi = () => {
                var $rowSelectors = $('input[name=checkTableRow]');
                var $selectedRowsActionsLink = $('#ddSelectedRowsActions');
                var allRows = $rowSelectors.length;
                var selectedRowsCount = $rowSelectors.filter(':checked').length;
                if (selectedRowsCount > 0) {
                    $selectedRowsActionsLink.removeClass('disabled');
                    //$selectedRowsActionsLink.prop('disabled', 'false');
                } else {
                    $selectedRowsActionsLink.addClass('disabled');
                }
                if (selectedRowsCount == allRows) {
                    $checkAllRows.prop('checked', true);
                } else {
                    $checkAllRows.prop('checked', false);
                }
            };
            var getTableData = (pageIndex, pageSize, sortData, dateRange, companyFilter) => {
                //#region getTableData
                var timeout;
               
                var uri =`/api/GrKoukInfoApi/GetIndexTblDataSellDocuments?pageIndex=${pageIndex}&pageSize=${pageSize}&companyFilter=${companyFilter}&dateRange=${dateRange}&sortData=${sortData}`;
                $.ajax({
                    contentType: 'application/json; charset=utf-8',

                    dataType: 'json',
                    type: 'GET',

                    url: uri,
                    beforeSend: function() {
                        if (timeout) {
                            clearTimeout(timeout);
                        }
                        timeout = setTimeout(function() {

                                $("#loadMe").modal({
                                    backdrop: "static", //remove ability to close modal with click
                                    keyboard: false, //remove option to close with keyboard
                                    show: true //Display loader!
                                });
                            },
                            1000);

                    },
                    success: function(result) {
                        var totalRecords = result.totalRecords;
                        var totalPages = result.totalPages;

                        $totalPages.val(totalPages);
                        $totalRecords.val(totalRecords);
                        var pagingInfo =
                            ` Page:${pageIndex} of ${totalPages} Total Items ${totalRecords}`;
                        $('[name=PagingInfo]').text(pagingInfo);
                        var hasPrevious = result.hasPrevious;
                        var hasNext = result.hasNext;
                        if (hasPrevious) {
                            $('#GoToFirst, #GoToPrevious').parent().removeClass('disabled');
                        } else {
                            $('#GoToFirst, #GoToPrevious').parent().addClass('disabled');
                        }
                        if (hasNext) {
                            $('#GoToLast, #GoToNext').parent().removeClass('disabled');
                        } else {
                            $('#GoToLast, #GoToNext').parent().addClass('disabled');
                        }
                        $('#myTable > tbody').empty();

                        $.each(result.data,
                            function(index, value) {
                                var tDate = moment(value.transDate).format('DD/MM/YYYY');
                                var seriesCode = value.sellDocSeriesName;
                                var refCode = value.transRefCode;
                                var transName = value.transactorName;
                               // var categoryName = value.finTransCategoryName;
                                var compName = value.companyCode;
                                var amountTotal = value.totalAmount;
                                var itemId = value.id;
                                var urlEdit = `@Url.Page("./Edit")?id=${itemId}`;
                                var urlInfo = `@Url.Page("./Details")?id=${itemId}`;
                                var urlDel = `@Url.Page("./Delete")?id=${itemId}`;
                                var actionsCol = `<td class="small text-center">
                                                <a href="${urlEdit}"><i class="fas fa-edit fa-lg"></i></a> |
                                                 <a href="${urlInfo}"><i class="fas fa-info-circle fa-lg"></i></a> |
                                                 <a href="${urlDel}"><i class="fas fa-trash fa-lg"></i></a>
                                                </td>`;

                                var $tr = $('<tr>').append(
                                    $(
                                        '<td name="selectRowColumn"> <label class="custom-control custom-checkbox">  ' +
                                        ' <input type="checkbox" class="custom-control-input" name="checkTableRow">' +
                                        '<span class="custom-control-indicator"></span></label></td>'),
                                    $('<td>').text(tDate).addClass('text-right small'),
                                    $('<td>').text(transName).addClass('small'),
                                    $('<td>').text(seriesCode).addClass('small'),
                                    $('<td>').text(refCode).addClass('small d-none d-sm-table-cell'),
                                    $('<td>').text(amountTotal).addClass('small text-right'),
                                    $('<td>').text(compName).addClass('small d-none d-md-table-cell'),
                                   
                                    $(actionsCol)
                                ).appendTo('#myTable > tbody');

                            });
                        $('input[name=checkTableRow]').on('change',
                            function() {
                                handleSelectedRowsUi();
                            });
                        //console.log();
                        rowSelectorsUi();
                        handleSortUi();
                    },
                    complete: function() {
                        if (timeout) {
                            clearTimeout(timeout);
                        }
                        $("#loadMe").modal("hide");
                        setTimeout(function() {
                                console.log('Checking for open modals');
                                var isOpen = $('#loadMe').hasClass('show');
                                if (isOpen) {
                                    console.log('There is an open Modal');
                                    $("#loadMe").modal("hide");
                                } else {
                                    console.log('No open modal');
                                }
                            },
                            2000);
                    },
                    error: function(e) {
                        console.log(e);

                    }
                });
                //#endregion
            };

            var rowSelectorsUi = () => {
                var $selectSingleSelectors = $('td[name=selectRowColumn]');
                var selectorsVisible = $rowSelectorsVisible.val();
                var newSelectorsVisible =
                    (selectorsVisible == 'True' || selectorsVisible == 'true' || selectorsVisible === true)
                        ? 'True'
                        : 'False';
                if (newSelectorsVisible == 'True') {
                    $selectAllSelector.removeAttr('hidden');
                    $selectSingleSelectors.removeAttr('hidden');
                    $selectAllSelector.show();
                    $selectSingleSelectors.show();
                    $rowSelectorsVisible.val(true);
                    $rowSelectorsToggle.text('Hide Row Selectors');
                    $selectedRowsActionsMenu.removeAttr('hidden');
                    $selectedRowsActionsLink.addClass('disabled');
                } else {
                    $selectAllSelector.hide();
                    $selectSingleSelectors.hide();
                    $rowSelectorsVisible.val(false);
                    $rowSelectorsToggle.text('Show Row Selectors');
                    $selectedRowsActionsMenu.attr('hidden', 'true');
                }
            };
            var refreshTableData = () => {
                var pageIndexVal = parseInt($('#pageIndex').val());

                var pageIndex = reallyIsNaN(pageIndexVal)
                    ? 1
                    : pageIndexVal;
                $('#pageIndex').val(pageIndex);

                var pageSize = $('#PageSize').val() == null || $('#PageSize').val().length == 0
                    ? 10
                    : parseInt($('#PageSize').val());


                var companyFilter = $('#CompanyFilter').val();
                var datePeriod = $('#DatePeriodFilter').val();
                var sortData = $('#currentSort').val();
                getTableData(pageIndex, pageSize, sortData, datePeriod, companyFilter);

            };
            var gotoFirstPage = () => {
                var curPageIndex = 1;
                $pageIndex.val(curPageIndex);
                refreshTableData();
            };
            var gotoLastPage = () => {
                var curPageIndex = parseInt($totalPages.val());

                $pageIndex.val(curPageIndex);
                refreshTableData();
            };
            var gotoNextPage = () => {
                var curPageIndex = parseInt($pageIndex.val());
                curPageIndex += 1;
                $pageIndex.val(curPageIndex);
                refreshTableData();

            };
            var gotoPreviousPage = () => {
                var curPageIndex = parseInt($pageIndex.val());
                curPageIndex -= 1;
                $pageIndex.val(curPageIndex);
                refreshTableData();

            };
            var deleteSelectedRows = () => {
                var $rowSelectors = $('input[name=checkTableRow]');
                var selectedRows = $rowSelectors.filter(':checked');
                var idsToDelete = [];
                $.each(selectedRows,
                    function(key, value) {
                        console.log(value);
                        var id = parseInt(value.dataset.itemid);
                        idsToDelete.push(id);
                    });
                if (idsToDelete.length > 0) {
                    var idsJs = JSON.stringify({
                        //ToDo: Change this
                        section: 'SectionCode',
                        ids: idsToDelete
                    });
                    var timeout;

                    $.ajax({
                        contentType: 'application/json; charset=utf-8',

                        dataType: 'json',
                        type: 'POST',
                        data: idsJs,
                        url: "/api/GrkoukInfoApi/DeletesellDocumentsList",
                        beforeSend: function() {
                            if (timeout) {
                                clearTimeout(timeout);
                            }
                            timeout = setTimeout(function() {

                                    $("#loadMe").modal({
                                        backdrop: "static", //remove ability to close modal with click
                                        keyboard: false, //remove option to close with keyboard
                                        show: true //Display loader!
                                    });
                                },
                                1000);

                        },
                        success: function(result) {
                            console.log(success);
                        },
                        complete: function() {
                            if (timeout) {
                                clearTimeout(timeout);
                            }
                            $("#loadMe").modal("hide");
                            setTimeout(function() {
                                    console.log('Checking for open modals');
                                    var isOpen = $('#loadMe').hasClass('show');
                                    if (isOpen) {
                                        console.log('There is an open Modal');
                                        $("#loadMe").modal("hide");
                                    } else {
                                        console.log('No open modal');
                                    }
                                },
                                2000);
                        },
                        error: function (e) {
                            console.log(e);

                        }
                    });

                }

            };
            var getSelectedRows = () => {
                var $rowSelectors = $('input[name=checkTableRow]');
                var selectedRows = $rowSelectors.filter(':checked');
                console.log('Selected table rows=' + selectedRows);
            };
            var countSelectedRows = () => {
                var $rowSelectors = $('input[name=checkTableRow]');
                var selectedRows = $rowSelectors.filter(':checked');
                return selectedRows.length;
            };
            var handleFiltersUi = () => {
                var filterVisible = $filtersVisible.val();
                if (filterVisible==='True' || filterVisible==='true') {
                    $filterCollapse.collapse('show');
                } else {
                    $filterCollapse.collapse('hide');
                }
            };
            var showFiltersUi = () => {

            };
            $deleteSelectedRowsLink.on('click',
                () => {
                    deleteSelectedRows();
                });


            $filterCollapse.on('hidden.bs.collapse',
                function() {
                    console.log('Filters Hidden');
                    $filtersToggle.text('Show Filters');


                    $filtersVisible.val(false);
                });

            $filterCollapse.on('shown.bs.collapse',
                function() {
                    console.log('Filters Shown');
                    $filtersToggle.text('Hide Filters');
                    // var alist = $('a[href*="&filtersVisible"]');

                    $filtersVisible.val(true);
                });
            $checkAllRows.on('change',
                function() {
                    var th = $(this).index();
                    var isChecked = $(this).prop('checked');
                    $('input[name=checkTableRow]').prop('checked', isChecked);
                    var selectedRowsCount = countSelectedRows();
                    if (selectedRowsCount > 0) {
                        $selectedRowsActionsLink.removeClass('disabled');
                    } else {
                        $selectedRowsActionsLink.addClass('disabled');
                    }
                });


            var rosSelectorsToggleHandler = () => {
                var $selectSingleSelectors = $('td[name=selectRowColumn]');
                var selectorsVisible = $rowSelectorsVisible.val();
                var newSelectorsVisible =
                    (selectorsVisible == 'True' || selectorsVisible == 'true' || selectorsVisible === true)
                        ? 'False'
                        : 'True';
                if (newSelectorsVisible == 'True') {
                    $selectAllSelector.removeAttr('hidden');
                    $selectSingleSelectors.removeAttr('hidden');
                    $selectAllSelector.show();
                    $selectSingleSelectors.show();
                    $rowSelectorsVisible.val(true);
                    $rowSelectorsToggle.text('Hide Row Selectors');
                    $selectedRowsActionsMenu.removeAttr('hidden');
                    $selectedRowsActionsLink.addClass('disabled');
                } else {
                    $selectAllSelector.hide();
                    $selectSingleSelectors.hide();
                    $rowSelectorsVisible.val(false);
                    $rowSelectorsToggle.text('Show Row Selectors');
                    $selectedRowsActionsMenu.attr('hidden', 'true');
                }
            };
            $rowSelectorsToggle.on('click',
                function() {
                    rosSelectorsToggleHandler();
                });


            $('#DatePeriodFilter').on('change',
                function() {
                    $('#pageIndex').val(1);
                    refreshTableData();
                });
            $('#CompanyFilter').on('change',
                function() {
                    $('#pageIndex').val(1);
                    refreshTableData();
                });
            $('#PageSize').on('change',
                function() {
                    $('#pageIndex').val(1);
                    refreshTableData();
                });
            $('#GoToLast').on('click', function() {
                gotoLastPage();
            });
            $('#GoToFirst').on('click',
                function() {
                    gotoFirstPage();
                });
            $('#GoToNext').on('click',
                function() {
                    gotoNextPage();
                });
            $('#GoToPrevious').on('click',
                function() {
                    gotoPreviousPage();
                });
            $('#TransDateHeader').on('click',
                function() {
                    var newSortVal = '';
                    var curSort = $('#currentSort').val();
                    if (curSort === undefined || curSort === null || curSort.length === 0) {
                        curSort = 'transactiondate:desc';
                    }
                    var curSortAr = curSort.split(':');
                    if (curSortAr[0] === 'transactiondate') {
                        var newSort = curSortAr[1] === 'asc' ? 'desc' : 'asc';
                        newSortVal = curSortAr[0] + ':' + newSort;
                    } else {
                        newSortVal = 'transactiondate:asc';
                    }
                    $('#currentSort').val(newSortVal);
                    $('#pageIndex').val(1);
                    refreshTableData();

                });
            $('#TransactorNameHeader').on('click',
                function() {
                    var newSortVal = '';
                    var curSort = $('#currentSort').val();
                    if (curSort === undefined || curSort === null || curSort.length === 0) {
                        curSort = 'transactorname:desc';
                    }
                    var curSortAr = curSort.split(':');
                    if (curSortAr[0] === 'transactorname') {
                        var newSort = curSortAr[1] === 'asc' ? 'desc' : 'asc';
                        newSortVal = curSortAr[0] + ':' + newSort;
                    } else {
                        newSortVal = 'transactorname:asc';
                    }
                    $('#currentSort').val(newSortVal);
                    $('#pageIndex').val(1);
                    refreshTableData();
                });
            $('#CreateNew').on('click', function() {
                var uri = '@Url.Page("Create")';
                window.location.href = uri;
            });



            var storageItemJs = localStorage.getItem('SellDocIndexView');
            if (storageItemJs === undefined || storageItemJs === null) {
                $('#pageIndex').val(1);
                $('#filtersVisible').val(true);
                $('#rowSelectorsVisible').val(true);
                // $rowSelectorsToggle.text('Hide Row Selectors');
                // $filtersToggle.text('Hide Filters');
                $('#DatePeriodFilter').val('CURMONTH');
                $('#CompanyFilter').val(0);
                $('#currentSort').val('transactiondate:desc');
            } else {
                var storageItem = JSON.parse(storageItemJs);
                var filtersValue = storageItem.find(x => x.filterKey === 'filtersVisible').filterValue;
                if (filtersValue === true) {
                    $filtersToggle.text('Hide Filters');
                } else {
                    $filtersToggle.text('Show Filters');
                }
                $('#filtersVisible').val(filtersValue);
                filtersValue = storageItem.find(x => x.filterKey === 'rowSelectorsVisible').filterValue;
                $('#rowSelectorsVisible').val(filtersValue);
                //if (filtersValue === true) {
                //    $rowSelectorsToggle.text('Hide Row Selectors');
                //} else {
                //    $rowSelectorsToggle.text('Show Row Selectors');
                //}
                // rosSelectorsToggleHandler();
                filtersValue = storageItem.find(x => x.filterKey === 'dateRangeFilter').filterValue;
                $('#DatePeriodFilter').val(filtersValue);
                filtersValue = storageItem.find(x => x.filterKey === 'currentSort').filterValue;
                $('#currentSort').val(filtersValue);
                filtersValue = storageItem.find(x => x.filterKey === 'companyFilter').filterValue;
                $('#CompanyFilter').val(filtersValue);
                filtersValue = storageItem.find(x => x.filterKey === 'pageSize').filterValue;
                $('#PageSize').val(filtersValue);
                filtersValue = storageItem.find(x => x.filterKey === 'pageIndex').filterValue;
                $('#pageIndex').val(filtersValue);
            }
            handleFiltersUi();
            refreshTableData();

            rowSelectorsUi();
        });

        $(window).on('beforeunload',
            function(e) {
                //#region CommentOut
                //#region Variables
                var filtersVisible = $('#filterCollapse').hasClass('show');
                var $rowSelectorsColumn = $('th[name=selectAllRowsColumn]');

                var rowSelectorsNotVisible = $rowSelectorsColumn.is(':hidden');
                var rowSelectorsVisible = (rowSelectorsNotVisible) ? false : true;

                var pageSize = $('#PageSize').val();
                var dateRange = $('#DatePeriodFilter').val();
                var currentSort = $('#currentSort').val();
                var companyFilter = $('#CompanyFilter').val();
                var pageIndex = $('#pageIndex').val();
                var filtersArr = [];
                //#endregion
                filtersArr.push({
                    filterKey: 'filtersVisible',
                    filterValue: filtersVisible
                });
                filtersArr.push({
                    filterKey: 'rowSelectorsVisible',
                    filterValue: rowSelectorsVisible
                });
                filtersArr.push({
                    filterKey: 'pageIndex',
                    filterValue: pageIndex
                });
                filtersArr.push({
                    filterKey: 'pageSize',
                    filterValue: pageSize
                });
                filtersArr.push({
                    filterKey: 'dateRangeFilter',
                    filterValue: dateRange
                });
                filtersArr.push({
                    filterKey: 'currentSort',
                    filterValue: currentSort
                });
                filtersArr.push({
                    filterKey: 'companyFilter',
                    filterValue: companyFilter
                });
                //var storageItem = new {
                //    itemName: 'dateRangeFilter',
                //    filters:filtersArr
                //};

                var sessionVal = JSON.stringify(filtersArr);

                localStorage.setItem('SellDocIndexView', sessionVal);
                //#endregion

            });
    </script>
}
