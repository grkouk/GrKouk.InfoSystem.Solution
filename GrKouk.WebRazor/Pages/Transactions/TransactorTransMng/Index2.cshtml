@page
@model GrKouk.WebRazor.Pages.Transactions.TransactorTransMng.Index2Model
@{
    ViewData["Title"] = "Index";
}
@section MyCss
    {
    <link rel="stylesheet" href="~/css/custom-checkbox.css" />
}
<h4>Transactor Transactions Index</h4>


<div class="container ">
    <ul class="nav small justify-content-end ">
        <li class="nav-item">
            <a asp-page="Create" class="nav-link"
               asp-route-sortOrder="@Model.CurrentSort"
               asp-route-pageIndex="@(Model.ListItems.CurrentPage)"
               asp-route-currentFilter="@Model.CurrentFilter"
               asp-route-PageSize="@Model.PageSize">Create New</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="collapse" href="#filterCollapse" role="button" id="filtersToggle"
               aria-expanded="false" aria-controls="filterCollapse">
                @Model.FiltersShowText
            </a>

        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="collapse" href="#" id="rowSelectorsToggle" role="button">
                @Model.SelectedToggleText
            </a>
            @*<a class="nav-link disabled" href="#" tabindex="-1" >Selectors</a>*@
        </li>
        <li class="nav-item dropdown " @Model.SelectedRowsMenuItem id="SelectedRowsActionsMenu">
            <a class="nav-link dropdown-toggle disabled" role="button" id="ddSelectedRowsActions" data-toggle="dropdown"
               aria-haspopup="true" aria-expanded="false">Actions</a>
            <div class="dropdown-menu small">
                <a class="dropdown-item" href="#">Action</a>
                <a class="dropdown-item" href="#">Another action</a>
                <a class="dropdown-item" href="#">Something else here</a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#">Separated link</a>

            </div>
        </li>
    </ul>
</div>

<div class="collapse @Model.FiltersShow" id="filterCollapse">
    <form class="form-inline" asp-page="./Index2" method="get">
        <input type="hidden" asp-for="@Model.FiltersVisible" id="filtersVisible" />
        <input type="hidden" asp-for="@Model.RowSelectorsVisible" id="rowSelectorsVisible" />
        <div class="container">
            <div class="form-row">

                <div class="form-group col-md-auto">
                    <label class="small"> Search:</label>
                    <input class="form-control form-control-sm small" type="text" name="SearchString" value="@Model.CurrentFilter" />
                    <input type="submit" value="Search" class="btn btn-light btn-sm" />
                </div>
                <div class="form-group col-md-auto">
                    <a class="small" asp-page="./Index2"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-pageIndex="@(Model.ListItems.CurrentPage)"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       asp-route-companyFilter="@Model.CompanyFilter"
                       asp-route-filtersVisible="@Model.FiltersVisible"
                       asp-route-rowselectorsVisible="@Model.RowSelectorsVisible"
                       asp-route-datePeriodFilter="@Model.CurrentDatePeriod"
                       asp-route-PageSize="@Model.PageSize">Back to full List</a>
                </div>
                <div class="form-group col-md-auto">
                    <label class="small"> Period:</label>
                    <select name="DatePeriodFilter" asp-for="CurrentDatePeriod" class="form-control form-control-sm small" asp-items="ViewBag.DataFilterValues"
                            onchange="this.form.submit()"></select>
                </div>
                <div class="form-group col-md-auto">
                    <label class="small">Company:</label>
                    <select asp-for="CompanyFilter" class="form-control form-control-sm small"
                            asp-items="ViewBag.CompanyFilter" onchange="this.form.submit()"></select>

                </div>
                <div class="form-group col-md-auto">
                    <label class="small"> Page Size:</label>
                    <select asp-for="PageSize" onchange="this.form.submit()" class="form-control form-control-sm small" asp-items="ViewBag.PageFilterSize"></select>
                </div>
                <div class="form-group col-md-auto">
                    <small>

                        Page:@Model.ListItems.CurrentPage of @Model.ListItems.TotalPages Total Items @Model.ListItems.TotalCount
                    </small>
                </div>

            </div>
        </div>
    </form>
</div>
<br />
@await Html.PartialAsync("_ItemsView", Model)
@{
    var prevDisabled = !Model.ListItems.HasPrevious ? "disabled" : "";
    var nextDisabled = !Model.ListItems.HasNext ? "disabled" : "";
}


<nav aria-label="Page navigation example">
    <ul class="pagination pagination-sm">
        <li class="page-item @prevDisabled">
            <a asp-page="./Index2"
               asp-route-sortOrder="@Model.CurrentSort"
               asp-route-pageIndex="1"
               asp-route-searchFilter="@Model.CurrentFilter"
               asp-route-companyFilter="@Model.CompanyFilter"
               asp-route-datePeriodFilter="@Model.CurrentDatePeriod"
               asp-route-filtersVisible="@Model.FiltersVisible"
               asp-route-rowselectorsVisible="@Model.RowSelectorsVisible"
               asp-route-PageSize="@Model.PageSize"
               class="page-link" aria-label="First">
                @*<span aria-hidden="true">;</span>*@
                First
            </a>
        </li>
        <li class="page-item @prevDisabled">
            <a asp-page="./Index2"
               asp-route-sortOrder="@Model.CurrentSort"
               asp-route-pageIndex="@(Model.ListItems.CurrentPage - 1)"
               asp-route-searchFilter="@Model.CurrentFilter"
               asp-route-companyFilter="@Model.CompanyFilter"
               asp-route-datePeriodFilter="@Model.CurrentDatePeriod"
               asp-route-filtersVisible="@Model.FiltersVisible"
               asp-route-rowselectorsVisible="@Model.RowSelectorsVisible"
               asp-route-PageSize="@Model.PageSize"
               class="page-link" aria-label="Previous">
                @*<span aria-hidden="true">&laquo;</span>*@
                Previous
            </a>
        </li>

        <li class="page-item @nextDisabled">
            <a asp-page="./Index2"
               asp-route-sortOrder="@Model.CurrentSort"
               asp-route-pageIndex="@(Model.ListItems.CurrentPage + 1)"
               asp-route-searchFilter="@Model.CurrentFilter"
               asp-route-companyFilter="@Model.CompanyFilter"
               asp-route-datePeriodFilter="@Model.CurrentDatePeriod"
               asp-route-filtersVisible="@Model.FiltersVisible"
               asp-route-rowselectorsVisible="@Model.RowSelectorsVisible"
               asp-route-PageSize="@Model.PageSize"
               class="page-link" aria-label="Next">
                @*<span aria-hidden="true">&raquo;</span>*@
                Next
            </a>
        </li>
        <li class="page-item  @nextDisabled">
            <a asp-page="./Index2"
               asp-route-sortOrder="@Model.CurrentSort"
               asp-route-pageIndex="@Model.ListItems.TotalPages"
               asp-route-searchFilter="@Model.CurrentFilter"
               asp-route-companyFilter="@Model.CompanyFilter"
               asp-route-datePeriodFilter="@Model.CurrentDatePeriod"
               asp-route-filtersVisible="@Model.FiltersVisible"
               asp-route-rowselectorsVisible="@Model.RowSelectorsVisible"
               asp-route-PageSize="@Model.PageSize"
               class="page-link" aria-label="First">
                @*<span aria-hidden="true">;</span>*@
                Last
            </a>
        </li>
    </ul>
</nav>

@section Scripts
    {
    <script>
        $(document).ready(function () {
            //#region variables
            var $filtersVisible = $('#filtersVisible');
            var $filterCollapse = $('#filterCollapse');
            var $alist = $('a[href*="&filtersVisible"]');
            var $checkAllRows = $('input[name=checkAllRows]');
            var $filtersToggle = $('#filtersToggle');
            var $rowSelectorsToggle = $('#rowSelectorsToggle');
            var $rowSelectorsVisible = $('#rowSelectorsVisible');
            var $selectAllSelector = $('th[name=selectAllRowsColumn]');
            var $selectSingleSelectors = $('td[name=selectRowColumn]');
            var $selectedRowsActionsMenu = $('#SelectedRowsActionsMenu');
            var $selectedRowsActionsLink = $('#ddSelectedRowsActions');
            var $rowSelectors = $('input[name=checkTableRow]');
            //#endregion
            var getSelectedRows = () => {
                var selectedRows = $rowSelectors.filter(':checked');
                console.log('Selected table rows=' + selectedRows);
            };
            var countSelectedRows = () => {
                var selectedRows = $rowSelectors.filter(':checked');
                return selectedRows.length;
            };
            var handleSelectedRowsUi = () => {
                var allRows = $rowSelectors.length;
                var selectedRowsCount = $rowSelectors.filter(':checked').length;
                if (selectedRowsCount > 0) {
                    $selectedRowsActionsLink.removeClass('disabled');
                    //$selectedRowsActionsLink.prop('disabled', 'false');
                } else {
                    $selectedRowsActionsLink.addClass('disabled');
                }
                if (selectedRowsCount == allRows) {
                    $checkAllRows.prop('checked', true);
                } else {
                    $checkAllRows.prop('checked', false);
                }
            };
            $rowSelectors.on('change', function () {
                handleSelectedRowsUi();
            });
            $rowSelectors.on('change', function () {
                var selectedRowsCount = countSelectedRows();
                if (selectedRowsCount > 0) {
                    $selectedRowsActionsLink.removeClass('disabled');
                    //$selectedRowsActionsLink.prop('disabled', 'false');
                } else {
                    $selectedRowsActionsLink.addClass('disabled');
                }
            });
            $filterCollapse.on('hidden.bs.collapse', function () {
                console.log('Filters Hidden');
                $filtersToggle.text('Show Filters');
                //var alist = $('a[href*="&filtersVisible"]');
                $.each($alist,
                    function (key, value) {
                        var href = value.href;
                        var aParams = href.substring(0, href.length).split('&');
                        var retStr = [];
                        $.each(aParams, function (key, value) {
                            var vPair = value.split('=');
                            if (vPair[0] === 'filtersVisible') {
                                var s = 'filtersVisible' + '=False';
                                retStr.push(s);
                            } else {
                                retStr.push(value);
                            }
                        });
                        console.log('href=' + href);
                        console.log('aParams=' + aParams);
                        console.log('retStr=' + retStr);
                        var newHref = retStr.join('&');
                        console.log('new Href=' + newHref);
                        value.href = newHref;


                    });

                $filtersVisible.val(false);
            });

            $filterCollapse.on('shown.bs.collapse', function () {
                console.log('Filters Shown');
                $filtersToggle.text('Hide Filters');
                // var alist = $('a[href*="&filtersVisible"]');
                $.each($alist,
                    function (key, value) {
                        var href = value.href;
                        var aParams = href.substring(0, href.length).split('&');
                        var retStr = [];
                        $.each(aParams, function (key, value) {
                            var vPair = value.split('=');
                            if (vPair[0] === 'filtersVisible') {
                                var s = 'filtersVisible' + '=True';
                                retStr.push(s);
                            } else {
                                retStr.push(value);
                            }
                        });
                        console.log('href=' + href);
                        console.log('aParams=' + aParams);
                        console.log('retStr=' + retStr);
                        var newHref = retStr.join('&');
                        console.log('new Href=' + newHref);
                        value.href = newHref;


                    });
                $filtersVisible.val(true);
            });
            $checkAllRows.on('change', function () {
                var th = $(this).index();
                var isChecked = $(this).prop('checked');
                // alert('Column number is : ' + th + ' and text is : ' + $(this).prop('checked'));
                $('input[name=checkTableRow]').prop('checked', isChecked);
                var selectedRowsCount = countSelectedRows();
                if (selectedRowsCount > 0) {
                    //$selectedRowsActionsLink.removeAttr('disabled');
                    $selectedRowsActionsLink.removeClass('disabled');
                    //$selectedRowsActionsLink.prop('disabled', 'false');
                } else {
                    $selectedRowsActionsLink.addClass('disabled');
                    //$selectedRowsActionsLink.prop('disabled', 'true');
                }
            });
            $rowSelectorsToggle.on('click', function () {
                var selectorsVisible = $rowSelectorsVisible.val();
                var newSelectorsVisible = (selectorsVisible == 'True' || selectorsVisible == 'true') ? 'False' : 'True';
                if (newSelectorsVisible == 'True') {
                    $selectAllSelector.removeAttr('hidden');
                    $selectSingleSelectors.removeAttr('hidden');
                    $selectAllSelector.show();
                    $selectSingleSelectors.show();
                    $rowSelectorsVisible.val(true);
                    $rowSelectorsToggle.text('Hide Row Selectors');
                    $selectedRowsActionsMenu.removeAttr('hidden');
                    $selectedRowsActionsLink.addClass('disabled');
                    //$selectedRowsActionsLink.prop('disabled', 'true');
                } else {
                    $selectAllSelector.hide();
                    $selectSingleSelectors.hide();
                    $rowSelectorsVisible.val(false);
                    $rowSelectorsToggle.text('Show Row Selectors');
                    $selectedRowsActionsMenu.attr('hidden', 'true');
                }
            });
        });
    </script>
}