@page
@model GrKouk.WebRazor.Pages.MainEntities.MaterialCodes.IndexModel

@{
    ViewData["Title"] = "Index";
}
@section MyCss
{
    <link rel="stylesheet" href="~/css/custom-checkbox.css" />
}
@{
    var filtersShow = Model.FiltersVisible ? "show" : "";
    var filtersShowText = Model.FiltersVisible ? "Hide Filters" : "Show Filters";
    var RowSelectorsHidden = Model.RowSelectorsVisible ? "" : "hidden";
    var SelectedToggleText = Model.RowSelectorsVisible ? "Hide Row Selectors" : "Show Row Selectors";
    var SelectedRowsMenuItem = Model.RowSelectorsVisible ? "" : "hidden ";
    //var SelectedRowsDropdownDisabled=Model.RowSelectorsVisible ? "" : "hidden ";
}
<h4>List of WarehouseItem Codes</h4>
<div class="container ">
    <ul class="nav small justify-content-end ">
        <li class="nav-item">
            <a asp-page="Create" class="nav-link"
               asp-route-parentSortOrder="@Model.CurrentSort"
               asp-route-parentPageIndex="@(Model.ListItems.CurrentPage)"
               asp-route-parentSearchFilter="@Model.CurrentFilter"
               asp-route-parentFiltersVisible="@Model.FiltersVisible"
               asp-route-parentRowselectorsVisible="@Model.RowSelectorsVisible"
               asp-route-parentPageSize="@Model.PageSizeKartela"
               >Create New</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="collapse" href="#filterCollapse" role="button" id="filtersToggle"
               aria-expanded="false" aria-controls="filterCollapse">
                @filtersShowText
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="collapse" href="#" id="rowSelectorsToggle" role="button">
                @SelectedToggleText
            </a>
            @*<a class="nav-link disabled" href="#" tabindex="-1" >Selectors</a>*@
        </li>
        <li class="nav-item dropdown " @SelectedRowsMenuItem id="SelectedRowsActionsMenu">
            <a class="nav-link dropdown-toggle disabled" role="button" id="ddSelectedRowsActions" data-toggle="dropdown"
               aria-haspopup="true" aria-expanded="false">Actions</a>
            <div class="dropdown-menu small">
                <a class="dropdown-item" href="#">Action</a>
                <a class="dropdown-item" href="#" id="deleteSelectedRows">Delete Selected</a>
                <a class="dropdown-item" href="#">Another action</a>
                <a class="dropdown-item" href="#">Something else here</a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#">Separated link</a>

            </div>
        </li>
    </ul>
</div>

<div class="collapse @filtersShow" id="filterCollapse">
    <form class="form-inline" asp-page="./Index" method="get">
        <input type="hidden" asp-for="FiltersVisible" />
        <input type="hidden" asp-for="RowSelectorsVisible" />
        <input type="hidden" asp-for="SessionId" />
        <div class="container">
            <div class="form-row">

                <div class="form-group col-md-auto">
                    <label class="small"> Search:</label>
                    <input class="form-control form-control-sm small" type="text" name="SearchString" value="@Model.CurrentFilter" />
                    <input type="submit" value="Search" class="btn btn-light btn-sm" />
                </div>
                <div class="form-group col-md-auto">
                    <a class="small" asp-page="./Index"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-pageIndex="@(Model.ListItems.CurrentPage)"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       asp-route-filtersVisible="@Model.FiltersVisible"
                       asp-route-rowselectorsVisible="@Model.RowSelectorsVisible"
                       asp-route-PageSize="@Model.PageSizeKartela">Back to full List</a>
                </div>


                <div class="form-group col-md-auto">
                    <label class="small"> Page Size:</label>
                    <select asp-for="PageSizeKartela" onchange="this.form.submit()" class="form-control form-control-sm small"
                            asp-items="ViewBag.PageFilterSize"></select>
                </div>
                <div class="form-group col-md-auto">
                    <small>
                        Page:@Model.ListItems.CurrentPage of @Model.ListItems.TotalPages Total Items @Model.ListItems.TotalCount
                    </small>
                </div>
            </div>
        </div>
    </form>
</div>
<br />

<table class="table table-bordered table-sm m-0">
    <thead class="thead-light">
        <tr>
            <th name="selectAllRowsColumn" @RowSelectorsHidden>
                <label class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" name="checkAllRows">
                    <span class="custom-control-indicator"></span>
                </label>
            </th>
            <th class="small text-center">
                <a asp-page="./Index"
                   asp-route-sortOrder="@Model.DateSort"
                   asp-route-searchFilter="@Model.CurrentFilter"
                   asp-route-filtersVisible="@Model.FiltersVisible"
                   asp-route-rowselectorsVisible="@Model.RowSelectorsVisible"
                   asp-route-PageSize="@Model.PageSizeKartela">
                    @Html.DisplayNameFor(model => model.ListItems[0].WarehouseItem)
                </a>
                <i class="@Model.DateSortIcon"></i>
            </th>
            <th class="small">
                @Html.DisplayNameFor(model => model.ListItems[0].CodeType)
            </th>
            <th class="small">
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                   asp-route-searchFilter="@Model.CurrentFilter"
                   asp-route-filtersVisible="@Model.FiltersVisible"
                   asp-route-rowselectorsVisible="@Model.RowSelectorsVisible"
                   asp-route-PageSize="@Model.PageSizeKartela">
                    @Html.DisplayNameFor(model => model.ListItems[0].Code)
                </a>
                <i class="@Model.NameSortIcon"></i>
            </th>

            <th class="small">
                @Html.DisplayNameFor(model => model.ListItems[0].TransactorId)
            </th>
            <th class="small text-center">
                @Html.DisplayNameFor(model => model.ListItems[0].CodeUsedUnit)
            </th>

            <th class="small"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ListItems)
        {
            <tr>
                <td name="selectRowColumn" @RowSelectorsHidden>
                    <label class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" name="checkTableRow"
                               data-itemId=""
                               data-materialid="@item.WarehouseItemId"
                               data-codetype="@item.CodeType"
                               data-code="@item.Code">
                        <span class="custom-control-indicator"></span>
                    </label>
                </td>
                <td class="small">
                    @Html.DisplayFor(modelItem => item.WarehouseItem.Name)
                </td>
                <td class="small">
                    @Html.DisplayFor(modelItem => item.CodeType)
                </td>
                <td class="small">
                    @Html.DisplayFor(modelItem => item.Code)
                </td>

                <td class="small">
                    @Html.DisplayFor(modelItem => item.TransactorId)
                </td>
                <td class="small text-right">
                    @Html.DisplayFor(modelItem => item.CodeUsedUnit)
                </td>


                <td class="small">
                    <a asp-page="./Details"
                       asp-route-materialid="@item.WarehouseItemId"
                       asp-route-codetype="@item.CodeType"
                       asp-route-code="@item.Code">
                        <i class="fas fa-info-circle" style="color: slategray"></i>
                    </a> |
                    <a asp-page="./Delete"
                       asp-route-materialid="@item.WarehouseItemId"
                       asp-route-codetype="@item.CodeType"
                       asp-route-code="@item.Code">
                        <i class="fas fa-trash" style="color: slategray"></i>
                    </a>
                </td>
            </tr>
        }

    </tbody>
</table>

@{
    var prevDisabled = !Model.ListItems.HasPrevious ? "disabled" : "";
    var nextDisabled = !Model.ListItems.HasNext ? "disabled" : "";
}




<nav aria-label="Page navigation example">
    <ul class="pagination pagination-sm">
        <li class="page-item @prevDisabled">
            <a asp-page="./index"
               asp-route-pageIndexKartela="1"
               asp-route-PageSizeKartela="@Model.PageSizeKartela"
               asp-route-transactorId="@Model.TransactorId"
               asp-route-transactorName="@Model.TransactorName"
               asp-route-parentPageIndex="@Model.ParentPageIndex "
               asp-route-transactorTypeFilter="@Model.TransactorTypeFilter"
               asp-route-filtersVisible="@Model.FiltersVisible"
               asp-route-rowselectorsVisible="@Model.RowSelectorsVisible"
               asp-route-parentPageSize="@Model.ParentPageSize"
               class="page-link" aria-label="First">
                @*<span aria-hidden="true">;</span>*@
                First
            </a>
        </li>
        <li class="page-item @prevDisabled">
            <a asp-page="./index"
               asp-route-pageIndexKartela="@(Model.ListItems.CurrentPage - 1)"
               asp-route-PageSizeKartela="@Model.PageSizeKartela"
               asp-route-transactorId="@Model.TransactorId"
               asp-route-transactorName="@Model.TransactorName"
               asp-route-parentPageIndex="@Model.ParentPageIndex "
               asp-route-transactorTypeFilter="@Model.TransactorTypeFilter"
               asp-route-filtersVisible="@Model.FiltersVisible"
               asp-route-rowselectorsVisible="@Model.RowSelectorsVisible"
               asp-route-parentPageSize="@Model.ParentPageSize"
               class="page-link" aria-label="Previous">
                @*<span aria-hidden="true">&laquo;</span>*@
                Previous
            </a>
        </li>
        @*<li class="page-item"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>*@
        <li class="page-item @nextDisabled">
            <a asp-page="./index"
               asp-route-pageIndexKartela="@(Model.ListItems.CurrentPage + 1)"
               asp-route-PageSizeKartela="@Model.PageSizeKartela"
               asp-route-transactorId="@Model.TransactorId"
               asp-route-transactorName="@Model.TransactorName"
               asp-route-parentPageIndex="@Model.ParentPageIndex "
               asp-route-transactorTypeFilter="@Model.TransactorTypeFilter"
               asp-route-filtersVisible="@Model.FiltersVisible"
               asp-route-rowselectorsVisible="@Model.RowSelectorsVisible"
               asp-route-ParentPageSize="@Model.ParentPageSize"
               class="page-link" aria-label="Next">
                @*<span aria-hidden="true">&raquo;</span>*@
                Next
            </a>
        </li>
        <li class="page-item  @nextDisabled">
            <a asp-page="./index"
               asp-route-pageIndexKartela="@Model.ListItems.TotalPages"
               asp-route-PageSizeKartela="@Model.PageSizeKartela"
               asp-route-transactorId="@Model.TransactorId"
               asp-route-transactorName="@Model.TransactorName"
               asp-route-parentPageIndex="@Model.ParentPageIndex "
               asp-route-transactorTypeFilter="@Model.TransactorTypeFilter"
               asp-route-filtersVisible="@Model.FiltersVisible"
               asp-route-rowselectorsVisible="@Model.RowSelectorsVisible"
               asp-route-ParentPageSize="@Model.ParentPageSize"
               class="page-link" aria-label="First">
                @*<span aria-hidden="true">;</span>*@
                Last
            </a>
        </li>
    </ul>
</nav>

<br />
<a asp-page="/Mainentities/Materials/Index"
   asp-route-pageIndex="@Model.ParentPageIndex "
   asp-route-transactorTypeFilter="@Model.TransactorTypeFilter"
   asp-route-PageSize="@Model.ParentPageSize"
   asp-route-sessionId="@Model.SessionId"
   class="small">Back to List</a>

<!-- Modal -->
<div class="modal fade" id="loadMe" tabindex="-1" role="dialog" aria-labelledby="loadMeLabel">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-body text-center">
                <div class="loader"></div>
                <div>
                    <p>Executing request. <br><br><small>Please wait...</small></p>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts
    {
    <script>
        $(document).ready(function () {
            //#region variables
            var $filtersVisible = $('#filtersVisible');
            var $filterCollapse = $('#filterCollapse');
            var $alist = $('a[href*="&filtersVisible"]');
            var $checkAllRows = $('input[name=checkAllRows]');
            var $rowSelectors = $('input[name=checkTableRow]');
            var $filtersToggle = $('#filtersToggle');
            var $rowSelectorsToggle = $('#rowSelectorsToggle');
            var $rowSelectorsVisible = $('#rowSelectorsVisible');
            var $selectAllSelector = $('th[name=selectAllRowsColumn]');
            var $selectSingleSelectors = $('td[name=selectRowColumn]');
            var $selectedRowsActionsMenu = $('#SelectedRowsActionsMenu');
            var $selectedRowsActionsLink = $('#ddSelectedRowsActions');
            var $deleteSelectedRowsLink = $('#deleteSelectedRows');
            //#endregion
            var deleteSelectedRows = () => {
                var selectedRows = $rowSelectors.filter(':checked');
                var idsToDelete = [];
                $.each(selectedRows, function (key, value) {
                    console.log(value);
                    var id = parseInt(value.dataset.itemid);
                    idsToDelete.push(id);
                });
                if (idsToDelete.length > 0) {
                    var idsJs = JSON.stringify({

                        ids: idsToDelete
                    });
                    var timeout;

                    $.ajax({
                        contentType: 'application/json; charset=utf-8',

                        dataType: 'json',
                        type: 'POST',
                        data: idsJs,
                        url: "/api/GrkoukInfoApi/DeleteBuyDocumentsList",
                        beforeSend: function () {
                            if (timeout) { clearTimeout(timeout); }
                            timeout = setTimeout(function () {

                                $("#loadMe").modal({
                                    backdrop: "static", //remove ability to close modal with click
                                    keyboard: false, //remove option to close with keyboard
                                    show: true //Display loader!
                                });
                            }, 1000);

                        },
                        success: function (result) {
                            console.log(success);
                        },
                        complete: function () {
                            if (timeout) { clearTimeout(timeout); }
                            $("#loadMe").modal("hide");
                            setTimeout(function () {
                                console.log('Checking for open modals');
                                var isOpen = $('#loadMe').hasClass('show');
                                if (isOpen) {
                                    console.log('There is an open Modal');
                                    $("#loadMe").modal("hide");
                                } else {
                                    console.log('No open modal');
                                }
                            }, 2000);
                        },
                        error: function (e) {
                            console.log(e);

                        }
                    });

                }

            };
            var getSelectedRows = () => {
                var selectedRows = $rowSelectors.filter(':checked');
                console.log('Selected table rows=' + selectedRows);
            };
            var countSelectedRows = () => {
                var selectedRows = $rowSelectors.filter(':checked');
                return selectedRows.length;
            };
            var handleSelectedRowsUi = () => {
                var allRows = $rowSelectors.length;
                var selectedRowsCount = $rowSelectors.filter(':checked').length;
                if (selectedRowsCount > 0) {
                    $selectedRowsActionsLink.removeClass('disabled');
                    //$selectedRowsActionsLink.prop('disabled', 'false');
                } else {
                    $selectedRowsActionsLink.addClass('disabled');
                }
                if (selectedRowsCount == allRows) {
                    $checkAllRows.prop('checked', true);
                } else {
                    $checkAllRows.prop('checked', false);
                }
            };
            $deleteSelectedRowsLink.on('click', () => {
                deleteSelectedRows();
            });
            $rowSelectors.on('change', function () {
                handleSelectedRowsUi();
            });
            $filterCollapse.on('hidden.bs.collapse', function () {
                console.log('Filters Hidden');
                $filtersToggle.text('Show Filters');
                //var alist = $('a[href*="&filtersVisible"]');
                $.each($alist,function (key, value) {
                        var href = value.href;
                        var aParams = href.substring(0, href.length).split('&');
                        var retStr = [];
                        $.each(aParams, function (key, value) {
                            var vPair = value.split('=');
                            if (vPair[0] === 'filtersVisible') {
                                var s = 'filtersVisible' + '=False';
                                retStr.push(s);
                            } else {
                                retStr.push(value);
                            }
                        });
                        console.log('href=' + href);
                        console.log('aParams=' + aParams);
                        console.log('retStr=' + retStr);
                        var newHref = retStr.join('&');
                        console.log('new Href=' + newHref);
                        value.href = newHref;


                    });

                $filtersVisible.val(false);

            });

            $filterCollapse.on('shown.bs.collapse', function () {
                console.log('Filters Shown');
                $filtersToggle.text('Hide Filters');
                // var alist = $('a[href*="&filtersVisible"]');
                $.each($alist, function (key, value) {
                    var href = value.href;
                    var aParams = href.substring(0, href.length).split('&');
                    var retStr = [];
                    $.each(aParams, function (key, value) {
                        var vPair = value.split('=');
                        if (vPair[0] === 'filtersVisible') {
                            var s = 'filtersVisible' + '=True';
                            retStr.push(s);
                        } else {
                            retStr.push(value);
                        }
                    });
                    console.log('href=' + href);
                    console.log('aParams=' + aParams);
                    console.log('retStr=' + retStr);
                    var newHref = retStr.join('&');
                    console.log('new Href=' + newHref);
                    value.href = newHref;
                });
                $filtersVisible.val(true);

            });

            $checkAllRows.on('change', function () {
                var th = $(this).index();
                var isChecked = $(this).prop('checked');
                // alert('Column number is : ' + th + ' and text is : ' + $(this).prop('checked'));
                $rowSelectors.prop('checked', isChecked);
                var selectedRowsCount = countSelectedRows();
                if (selectedRowsCount > 0) {
                    //$selectedRowsActionsLink.removeAttr('disabled');
                    $selectedRowsActionsLink.removeClass('disabled');
                    //$selectedRowsActionsLink.prop('disabled', 'false');
                } else {
                    $selectedRowsActionsLink.addClass('disabled');
                    //$selectedRowsActionsLink.prop('disabled', 'true');
                }
                // handleSelectedRowsUi();
            });

            $rowSelectorsToggle.on('click', function () {
                var selectorsVisible = $rowSelectorsVisible.val();
                var newSelectorsVisible = (selectorsVisible == 'True' || selectorsVisible == 'true') ? 'False' : 'True';
                if (newSelectorsVisible == 'True') {
                    $selectAllSelector.removeAttr('hidden');
                    $selectSingleSelectors.removeAttr('hidden');
                    $selectAllSelector.show();
                    $selectSingleSelectors.show();
                    $rowSelectorsVisible.val(true);
                    $rowSelectorsToggle.text('Hide Row Selectors');
                    $selectedRowsActionsMenu.removeAttr('hidden');
                    $selectedRowsActionsLink.addClass('disabled');
                    //$selectedRowsActionsLink.prop('disabled', 'true');
                } else {
                    $selectAllSelector.hide();
                    $selectSingleSelectors.hide();
                    $rowSelectorsVisible.val(false);
                    $rowSelectorsToggle.text('Show Row Selectors');
                    $selectedRowsActionsMenu.attr('hidden', 'true');
                }
            });
            var sessionVal = sessionStorage.getItem('MaterialCodesIndex');
            console.log('SessionVal for MaterialCodesIndex=' + sessionVal);
        });
        $(window).on( 'beforeunload',function(e)
        {
            //#region CommentOut
            @* //#region Variables
           var filtersVisible = $('#filterCollapse').hasClass('show');
            var $rowSelectorsColumn = $('th[name=selectAllRowsColumn]');

            var rowSelectorsNotVisible = $rowSelectorsColumn.is(':hidden');
            var rowSelectorsVisible = (rowSelectorsNotVisible )? false: true;
            var searchFilterValue = '@Model.CurrentFilter';
            var pageSize='@Model.ListItems.PageSize';
            var pageIndex = '@Model.ListItems.CurrentPage';
            var filtersArr = [];
           //#endregion
            filtersArr.push({
                filterKey:'filtersVisible',
                filterValue:filtersVisible
            });
            filtersArr.push({
                filterKey:'rowSelectorsVisible',
                filterValue:rowSelectorsVisible
            });
            filtersArr.push({
                filterKey:'searchFilterValue',
                filterValue:searchFilterValue
            });
            filtersArr.push({
                filterKey:'pageSize',
                filterValue:pageSize
            });
            filtersArr.push({
                filterKey:'pageIndex',
                filterValue:pageIndex
            });
            var sessionVal = JSON.stringify(filtersArr);
            
            sessionStorage.setItem('MaterialCodesIndex', sessionVal);*@
            //#endregion
           
        });
    </script>
}