@page
@using GrKouk.InfoSystem.Domain.FinConfig
@model GrKouk.WebRazor.Pages.MainEntities.Diaries.EditModel

@{
    ViewData["Title"] = "Edit";
}
@section MyCss
    {
    @*<link rel="stylesheet" href="~/css/bootstrap-multiselect.css" />*@
    <link rel="stylesheet" href="~/lib/bootstrap-select/css/bootstrap-select.min.css" />
}
<h4>Edit DiaryDef</h4>
<hr />
<div class="container">
    <form method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="ItemVm.Id" />
        <input type="hidden" asp-for="ItemVm.SelectedDocTypes" />
        <input type="hidden" asp-for="ItemVm.SelectedMatNatures" />
        <input type="hidden" asp-for="ItemVm.SelectedTransTypes" />
        <div class="form-row">
            <div class="form-group col-md-6">
                <label asp-for="ItemVm.Name" class="control-label small"></label>
                <input asp-for="ItemVm.Name" class="form-control form-control-sm" />
                <span asp-validation-for="ItemVm.Name" class="text-danger small"></span>
            </div>
            <div class="form-group col-md-3">
                <label asp-for="ItemVm.DiaryType" class="control-label small"></label>
                <select asp-for="ItemVm.DiaryType" class="form-control form-control-sm" asp-items="ViewBag.diaryTypes"></select>
                <span asp-validation-for="ItemVm.DiaryType" class="text-danger small"></span>
            </div>
        </div>
        <div class="form-row">
            <div class=" form-group col-md-3">
                <label class="control-label small">Document Types to Include </label>
                <select class="selectpicker form-control " id="DocTypes" multiple
                        data-selected-text-format="count > 1"></select>
            </div>
            <div class=" form-group col-md-3">
                <label class="control-label small">Transactor Types </label>
                <select class="selectpicker form-control " id="TransactorTypes" multiple
                        data-selected-text-format="count > 1"
                        asp-items="ViewBag.transactorTypes"></select>
            </div>
            <div class=" form-group col-md-3">
                <label class="control-label small">WarehouseItem Natures </label>
                <select class="selectpicker form-control " id="MaterialNatureTypes" multiple
                        data-selected-text-format="count > 1"
                        asp-items="ViewBag.MaterialNatureTypes"></select>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary btn-sm" />
            </div>
        </div>
    </form>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/lib/bootstrap-select/js/bootstrap-select.min.js"></script>
    <script>
        $(document).ready(function () {

            console.log("Inside Document ready");
            //#region variables
            var $diaryType = $('#ItemVm_DiaryType');
            var $docTypes = $('#DocTypes');
            var $transactorTypes = $('#TransactorTypes');
            var $matNatureTypes = $('#MaterialNatureTypes');
            var $selectedDocTypes = $('#ItemVm_SelectedDocTypes');
            var $selectedMatNatures = $('#ItemVm_SelectedMatNatures');
            var $selectedTransTypes = $('#ItemVm_SelectedTransTypes');
            //#endregion
            var buyDocTypeList = @Html.Raw(Json.Serialize(ViewBag.BuyDocTypeListJs));
            var sellDocTypeList = @Html.Raw(Json.Serialize(ViewBag.SellDocTypeListJs));
            var transDocTypeList = @Html.Raw(Json.Serialize(ViewBag.TransactorDocTypeListJs));
            var wareDocTypeList = @Html.Raw(Json.Serialize(ViewBag.WarehouseDocTypeListJs));
            //var transactorTypeList = @Html.Raw(Json.Serialize(ViewBag.TransactorTypeList));
            //var materialNatureList = @Html.Raw(Json.Serialize(ViewBag.MaterialNaturesList));

            console.log(buyDocTypeList);

            var diaryTypeChanged = () => {
                var selectedDocType = $diaryType.val();
                //$selectedTransTypes.val('');
                //$selectedMatNatures.val('');

                switch (selectedDocType) {
                    case 'DiaryTypeEnumBuys':

                    case 'DiaryTypeEnumExpenses':
                        //$docTypes.multiselect('dataprovider', buyDocTypeList);
                        $transactorTypes.prop('disabled', true);
                        $matNatureTypes.prop('disabled', true);
                        $docTypes.empty();
                        $.each(buyDocTypeList, function(index, item) {
                            $docTypes.append($('<option></option>').attr('value', item.value).text(item.title));
                        });
                        $transactorTypes.selectpicker('deselectAll');
                        $matNatureTypes.selectpicker('deselectAll');
                        $docTypes.selectpicker('refresh');
                        $transactorTypes.selectpicker('refresh');
                        $matNatureTypes.selectpicker('refresh');
                        break;
                    case 'DiaryTypeEnumIncome':
                    case 'DiaryTypeEnumSales':
                       // $docTypes.multiselect('dataprovider', sellDocTypeList);
                       $transactorTypes.prop('disabled', true);
                       $matNatureTypes.prop('disabled', true);
                        $docTypes.empty();
                       $.each(sellDocTypeList, function(index, item) {
                           $docTypes.append($('<option></option>').attr('value', item.value).text(item.title));
                       });
                       //$transactorTypes.selectpicker('deselectAll');
                      // $matNatureTypes.selectpicker('deselectAll');
                       $docTypes.selectpicker('refresh');
                       $transactorTypes.selectpicker('refresh');
                       $matNatureTypes.selectpicker('refresh');
                        break;
                    case 'DiaryTypeEnumWarehouse':
                        // $docTypes.multiselect('dataprovider', sellDocTypeList);
                        $transactorTypes.prop('disabled', true);
                        $matNatureTypes.prop('disabled', false);
                        $docTypes.empty();
                        $.each(wareDocTypeList, function(index, item) {
                            $docTypes.append($('<option></option>').attr('value', item.value).text(item.title));
                        });
                       // $transactorTypes.selectpicker('deselectAll');
                        $matNatureTypes.selectpicker('deselectAll');
                        $docTypes.selectpicker('refresh');
                        $transactorTypes.selectpicker('refresh');
                        $matNatureTypes.selectpicker('refresh');
                        break;
                    case 'DiaryTypeEnumTransactors':
                        $transactorTypes.prop('disabled', false);
                        $matNatureTypes.prop('disabled', true);
                        // $docTypes.multiselect('dataprovider', sellDocTypeList);
                        $docTypes.empty();
                        $.each(transDocTypeList, function(index, item) {
                            $docTypes.append($('<option></option>').attr('value', item.value).text(item.title));
                        });
                        //$transactorTypes.selectpicker('deselectAll');
                        //$matNatureTypes.selectpicker('deselectAll');
                        $docTypes.selectpicker('refresh');
                        $transactorTypes.selectpicker('refresh');
                        $matNatureTypes.selectpicker('refresh');
                        break;
                    default:
                        break;
                }
            };
            $diaryType.change(() => {
                diaryTypeChanged();
            });
            $('.selectpicker').selectpicker( );

            var updateDocType = () => {
                var typeList = $selectedDocTypes.val();
                var matList = $selectedMatNatures.val();
                var transList = $selectedTransTypes.val();
               
                console.log('typeList=' + typeList);
                console.log('matList=' + matList);
                console.log('transList=' + transList);

                var typeListArr = typeList.split(',');
                $docTypes.selectpicker('val', typeListArr);

                if (matList != null) {
                    var matListArr = matList.split(',');
                    $matNatureTypes.selectpicker('val', matListArr);
                }
                if (transList != null) {
                    var transListArr = transList.split(',');
                    $transactorTypes.selectpicker('val', transListArr);
                }
            };

            $docTypes.on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
                // do something...
                var sel = $('#DocTypes option:selected');
                var selected = [];
                $(sel).each(function(index, item) {
                    selected.push([$(this).val()]);
                });
                console.log('selected=' + selected);
                var sDocs = selected.toString();
                console.log('sDocs=' + sDocs);

                $selectedDocTypes.val(sDocs);
            });
            $transactorTypes.on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
                var sel = $('#TransactorTypes option:selected');
                var selected = [];
                $(sel).each(function(index, item) {
                    selected.push([$(this).val()]);
                });
                console.log('trans type selected=' + selected);
                var sDocs = selected.toString();
                console.log('sDocs=' + sDocs);
               
                $selectedTransTypes.val(sDocs);
            });
            $matNatureTypes.on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
                var sel = $('#MaterialNatureTypes option:selected');
                var selected = [];
                $(sel).each(function(index, item) {
                    selected.push([$(this).val()]);
                });
                console.log('WarehouseItem natures selected=' + selected);
                var sDocs = selected.toString();
                console.log('sDocs=' + sDocs);
               
                $selectedMatNatures.val(sDocs);
            });
            diaryTypeChanged();
            updateDocType();

        });
    </script>
}
