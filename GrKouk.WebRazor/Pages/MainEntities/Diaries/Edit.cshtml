@page
@using GrKouk.InfoSystem.Domain.FinConfig
@model GrKouk.WebRazor.Pages.MainEntities.Diaries.EditModel

@{
    ViewData["Title"] = "Edit";
}
@section MyCss
    {
    @*<link rel="stylesheet" href="~/css/bootstrap-multiselect.css" />*@
    <link rel="stylesheet" href="~/lib/bootstrap-select/css/bootstrap-select.min.css" />
}
<h4>Edit DiaryDef</h4>
<hr />
<div class="container">
    <form method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="ItemVm.Id" />
        <input type="hidden" asp-for="ItemVm.SelectedDocTypes" />
        <div class="form-row">
            <div class="form-group col-md-6">
                <label asp-for="ItemVm.Name" class="control-label small"></label>
                <input asp-for="ItemVm.Name" class="form-control form-control-sm" />
                <span asp-validation-for="ItemVm.Name" class="text-danger small"></span>
            </div>
            <div class="form-group col-md-3">
                <label asp-for="ItemVm.DiaryType" class="control-label small"></label>
                <select asp-for="ItemVm.DiaryType" class="form-control form-control-sm" asp-items="ViewBag.diaryTypes"></select>
                <span asp-validation-for="ItemVm.DiaryType" class="text-danger small"></span>
            </div>
        </div>
      

            <div class="form-row">
                <div class=" form-group col-md-3">
                    <label class="control-label small">Document Types to Include </label>
                    <select class="selectpicker form-control " id="DocTypes" multiple
                            data-selected-text-format="count > 1"
                            >
                      
                    </select>
                </div>
            </div>
        <div class="form-row">
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary btn-sm" />
            </div>
        </div>
    </form>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @*<script src="~/lib/Bootstrap-multiselect/bootstrap-multiselect.js"></script>*@
    <script src="~/lib/bootstrap-select/js/bootstrap-select.min.js"></script>
    <script>
        $(document).ready(function () {

            console.log("Inside Document ready");
            //#region variables
            var $diaryType = $('#ItemVm_DiaryType');
            var $docTypes = $('#DocTypes');
            var $selectedDocTypes = $('#ItemVm_SelectedDocTypes');
            //#endregion
            var buyDocTypeList = @Html.Raw(Json.Serialize(ViewBag.BuyDocTypeListJs));
            var sellDocTypeList = @Html.Raw(Json.Serialize(ViewBag.SellDocTypeListJs));

            console.log(buyDocTypeList);

            var diaryTypeChanged = () => {
                var selectedDocType = $diaryType.val();

                switch (selectedDocType) {
                case 'DiaryTypeEnumBuys':
                    // $docTypes.multiselect('dataprovider', buyDocTypeList);
                    $docTypes.empty();
                    $.each(buyDocTypeList, function(index, item) {
                        $docTypes.append($('<option></option>').attr('value', item.value).text(item.title));
                    });
                    $docTypes.selectpicker('refresh');
                    break;
                case 'DiaryTypeEnumSales':
                    // $docTypes.multiselect('dataprovider', sellDocTypeList);
                    $docTypes.empty();
                    $.each(sellDocTypeList, function(index, item) {
                        $docTypes.append($('<option></option>').attr('value', item.value).text(item.title));
                    });
                    $docTypes.selectpicker('refresh');
                    break;
                case 'DiaryTypeEnumExpenses':
                    $docTypes.empty();
                    $.each(buyDocTypeList, function(index, item) {
                        $docTypes.append($('<option></option>').attr('value', item.value).text(item.title));
                    });
                    $docTypes.selectpicker('refresh');
                    break;
                default:
                    break;
                }
            };
            $diaryType.change(() => {
                diaryTypeChanged();
            });
            $('.selectpicker').selectpicker( );

            var updateDocType = () => {
                var typeList = $selectedDocTypes.val();
                var typeListArr = typeList.split(',');
                console.log('typeList=' + typeList);
               $docTypes.selectpicker('val', typeListArr);
            };

            $docTypes.on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
                // do something...
                var sel = $('#DocTypes option:selected');
                var selected = [];
                $(sel).each(function(index, item) {
                    selected.push([$(this).val()]);
                });
                console.log('selected=' + selected);
                var sDocs = selected.toString();
                console.log('sDocs=' + sDocs);

                $selectedDocTypes.val(sDocs);
            });
            diaryTypeChanged();
            updateDocType();

        });
    </script>
}
