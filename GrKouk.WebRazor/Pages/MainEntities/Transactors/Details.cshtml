@page
@model GrKouk.WebRazor.Pages.MainEntities.Transactors.DetailsModel

@{
    Layout = "_LayoutDashboard";
    ViewData["Title"] = "Transactor Details";
}


<div class="container-fluid">
<div class="row">
<nav class="col-md-2 d-none d-md-block bg-light sidebar">
    <div class="sidebar-sticky">
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link active" href="#">
                    <span data-feather="home"></span>
                    Dashboard <span class="sr-only">(current)</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <span data-feather="file"></span>
                    Orders
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <span data-feather="shopping-cart"></span>
                    Products
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <span data-feather="users"></span>
                    Customers
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <span data-feather="bar-chart-2"></span>
                    Reports
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <span data-feather="layers"></span>
                    Integrations
                </a>
            </li>
        </ul>

        <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted">
            <span>Saved reports</span>
            <a class="d-flex align-items-center text-muted" href="#">
                <span data-feather="plus-circle"></span>
            </a>
        </h6>
        <ul class="nav flex-column mb-2">
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <span data-feather="file-text"></span>
                    Current month
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <span data-feather="file-text"></span>
                    Last quarter
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <span data-feather="file-text"></span>
                    Social engagement
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <span data-feather="file-text"></span>
                    Year-end sale
                </a>
            </li>
        </ul>
    </div>
</nav>

<main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">@Model.Item.Name Details</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group">
                <button type="button" class="btn  btn-sm btn-outline-secondary selected-currency-text">Reference</button>
                <button type="button" class="btn  btn-sm btn-outline-secondary dropdown-toggle dropdown-toggle-split" id="currencyMenuReference" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-reference="parent">
                    <span class="sr-only">Toggle Dropdown</span>
                </button>
                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="currencyMenuReference" name="CurrencySelector">
                    <button class="dropdown-item currency-item" type="button">Action</button>
                    <button class="dropdown-item currency-item" type="button">Another Action</button>

                    <button class="dropdown-item currency-item" type="button">Another Action</button>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="card bg-light">
            <div class="card-body">
                <h5 class="card-title">@Model.Item.Code</h5>
                <h6 class="card-subtitle mb-2 text-muted">@Model.Item.Companies</h6>
                <p class="card-text"></p>
                <a href="#" class="card-link">Card link</a>
                <a href="#" class="card-link">Another link</a>
            </div>
        </div>
    </div>

    <hr/>
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h4>Financial Summary</h4>
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group">
                <button type="button" class="btn  btn-sm btn-outline-secondary selected-company-text">Reference</button>
                <button type="button" class="btn  btn-sm btn-outline-secondary dropdown-toggle dropdown-toggle-split" id="companyMenuReference" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-reference="parent">
                    <span class="sr-only">Toggle Dropdown</span>
                </button>
                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="companyMenuReference" name="CompanySelector">
                    <button class="dropdown-item company-item" type="button">Action</button>
                    <button class="dropdown-item company-item" type="button">Another Action</button>

                    <button class="dropdown-item company-item" type="button">Another Action</button>
                </div>
            </div>


        </div>
    </div>
    <div class="container">
        <div class="row align-items-center justify-content-between">
            <div class="col-lg-4 col-sm-12">
                <div class="card">
                    <div class="card-header text-dark text-center">
                        <h4>Debit</h4>
                    </div>
                    <div class="card-body text-center">
                        <h5>5000,00</h5>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-sm-12">
                <div class="card">
                    <div class="card-header text-dark text-center">
                        <h4>Credit</h4>
                    </div>
                    <div class="card-body text-center">
                        <h5>5000,00</h5>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-sm-12">
                <div class="card">
                    <div class="card-header text-center">
                        <h4>Balance</h4>
                    </div>
                    <div class="card-body text-center">
                        <h5>5000,00</h5>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h4>Transactions</h4>
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group mr-2">
                <button type="button" class="btn btn-sm btn-outline-secondary">Share</button>
                <button type="button" class="btn btn-sm btn-outline-secondary">Export</button>
            </div>
            <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle">
                <span data-feather="calendar"></span>
                This week
            </button>

        </div>
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-sm">
            <thead>
            <tr>
                <th>#</th>
                <th>Header</th>
                <th>Header</th>
                <th>Header</th>
                <th>Header</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>1,001</td>
                <td>Lorem</td>
                <td>ipsum</td>
                <td>dolor</td>
                <td>sit</td>
            </tr>
            <tr>
            <td>1,002</td>
            <td>amet</td>
            <td>consectetur</td>
            <td>adipiscing</td>
            <td>elit</td>
            </tbody>
        </table>
    </div>
    <hr/>
        <footer>
            <p>&copy; 2018 - George Koukoudis</p>
        </footer>
    
    </main>
</div>
</div>


@section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/feather-icons/4.9.0/feather.min.js"></script>
    <script>
        (function () {
            feather.replace();
            const sessionKey='TransactorDetailsPage';
            const currencyListJs = @Html.Raw(Json.Serialize(ViewBag.CurrencyListJs));
            const companyListJs = @Html.Raw(Json.Serialize(ViewBag.CompanyListJs));
            //-------------------Currency--------------------------------------------------
            const setCurrency= (currencyId,currencyCode)=>{
                 const $selectedCurrency=$('.selected-currency-text');
                 $selectedCurrency.data('currencyid',currencyId);
                 $selectedCurrency.data('currencycode',currencyCode);
                 $selectedCurrency.text(currencyCode);
                  
             };
            const loadCurrencySelector = (availableCurrencies) => {
                let $currenciesMenu = $('[name=CurrencySelector]');
                
                $('.currency-item') .remove();
                if (availableCurrencies === undefined || availableCurrencies === null) {
                    return;
                }
                var d = availableCurrencies;
                d.forEach(function(item) {
                    var $aLink = $('<button>').addClass('dropdown-item small currency-item');
                    $aLink.text(item.name);
                    // var diaryHRef = '/MainEntities/Transactors/RunDiary';
                    // diaryHRef += `?diaryId=${item.value}`;
                    $aLink.attr('type', 'button');
                    $aLink.data('currencyid',item.id);
                    $aLink.data('currencycode',item.code);
                    $currenciesMenu.append($aLink);
                });
                $('.currency-item').on('click',
                         function(event) {
                            let button = $(event.delegateTarget);
                            let currencyId = button.data('currencyid');
                            let currencyCode = button.data('currencycode');
                            console.log(`Currency Id=${currencyId} currency Code=${currencyCode}`);
                            setCurrency(currencyId, currencyCode);
                            //let $btParent = button.parent()
                });
            };
            const getCurrencyId=(currencyCode,currencyList) =>{
                 if (!(typeof currencyList != "undefined"  
                      && currencyList != null  
                      && currencyList.length != null  
                      && currencyList.length > 0)) {
                        return 0;
                      }
                  
                   let ret = currencyList.find(x => x.code === currencyCode).id;
                   const parsed = parseInt(ret);
                   if (isNaN(parsed)) { 
                       return  currencyList[0].id; 
                   } else {
                       return parsed;
                   }
             };
            //------------------Company------------------------------------------------
            const loadCompanySelector = (availableCompanies) => {
                let $companiesMenu  = $('[name=CompanySelector]');
                
                $('.company-item') .remove();
                if (availableCompanies === undefined || availableCompanies === null) {
                    return;
                }
                var d = availableCompanies;
                d.forEach(function(item) {
                    var $aLink = $('<button>').addClass('dropdown-item small company-item');
                    $aLink.text(item.text);
                    $aLink.attr('type', 'button');
                    $aLink.data('companyid',item.value);
                    $aLink.data('companycode',item.text);
                    $companiesMenu.append($aLink);
                });
                $('.company-item').on('click',
                         function(event) {
                            let button = $(event.delegateTarget);
                            let companyId = button.data('companyid');
                            let companyCode = button.data('companycode');
                            console.log(`Company Id=${companyId} Company Code=${companyCode}`);
                            //setCurrency(currencyId, currencyCode);
                            //let $btParent = button.parent()
                });
            };
 
            const loadPreviousSession = (sessionKey,sessionObject)=>{
               let storageItemJs = localStorage.getItem(sessionKey);
               if (storageItemJs === undefined || storageItemJs === null) {
                   sessionObject.currencyCode='EUR';
                   
               } else {
                   var storageItem = JSON.parse(storageItemJs);
                   try {
                       let filtersValue = storageItem.find(x => x.filterKey === 'currentCurrency').filterValue;
                        
                        if (filtersValue === undefined || filtersValue === null) { 
                            sessionObject.currencyCode= 'EUR'; 
                        } else {
                            sessionObject.currencyCode= filtersValue;
                        }
                   } catch (e) {
                        sessionObject.currencyCode= 'EUR'; 
                   }
               }
           };
            let sessionObj={
                'currencyCode' : ''
            };
           
            loadCurrencySelector(currencyListJs);
            loadCompanySelector(companyListJs);
            loadPreviousSession(sessionKey, sessionObj);
            console.log(sessionObj);
            setCurrency(getCurrencyId(sessionObj.currencyCode,currencyListJs),sessionObj.currencyCode);
            
            
        }())
   $(window).on('beforeunload',
      function(e) {
            // for (const property in sessionObj) {
            //  console.log(`${property}: ${object[property]}`);
            // }
                  //#region CommentOut
                  //#region Variables
                  const sessionKey='TransactorDetailsPage';
                  const $selectedCurrency=$('.selected-currency-text');
                  var currentCurrency = $selectedCurrency.data('currencycode');
                  var filtersArr = [];
                  //#endregion
                  filtersArr.push({
                      filterKey: 'currentCurrency',
                      filterValue: currentCurrency
                  });
  
                  let sessionVal = JSON.stringify(filtersArr);
  
                  localStorage.setItem(sessionKey, sessionVal);
                  //#endregion
  
              });
    </script>
}